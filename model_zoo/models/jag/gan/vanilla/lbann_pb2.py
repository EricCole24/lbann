# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lbann.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='lbann.proto',
  package='lbann_data',
  syntax='proto3',
  serialized_pb=_b('\n\x0blbann.proto\x12\nlbann_data\"\xbb\x01\n\x07LbannPB\x12+\n\x0b\x64\x61ta_reader\x18\x01 \x01(\x0b\x32\x16.lbann_data.DataReader\x12 \n\x05model\x18\x02 \x01(\x0b\x32\x11.lbann_data.Model\x12(\n\toptimizer\x18\x03 \x01(\x0b\x32\x15.lbann_data.Optimizer\x12\x37\n\x11motif_definitions\x18\x04 \x01(\x0b\x32\x1c.lbann_data.MotifDefinitions\"I\n\nDataReader\x12\x17\n\x0fmax_par_io_size\x18\x01 \x01(\x03\x12\"\n\x06reader\x18\x02 \x03(\x0b\x32\x12.lbann_data.Reader\"\xa5\x06\n\x06Reader\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04role\x18\x03 \x01(\t\x12\x0f\n\x07shuffle\x18\x04 \x01(\x08\x12\x14\n\x0c\x64\x61ta_filedir\x18\x05 \x01(\t\x12\x1a\n\x12\x64\x61ta_local_filedir\x18\x32 \x01(\t\x12\x15\n\rdata_filename\x18\x06 \x01(\t\x12\x16\n\x0elabel_filename\x18\x07 \x01(\t\x12\x1a\n\x12validation_percent\x18\t \x01(\x01\x12\x1d\n\x15\x61\x62solute_sample_count\x18\x0b \x01(\x03\x12\x10\n\x07\x66irst_n\x18\xc8\x01 \x01(\x03\x12\x1e\n\x16percent_of_data_to_use\x18\x0c \x01(\x01\x12\x16\n\rgan_labelling\x18\xc9\x01 \x01(\x08\x12\x18\n\x0fgan_label_value\x18\xca\x01 \x01(\x05\x12\x39\n\x12image_preprocessor\x18\r \x01(\x0b\x32\x1d.lbann_data.ImagePreprocessor\x12\x17\n\x0fjag_scalar_keys\x18_ \x03(\t\x12\x16\n\x0ejag_input_keys\x18` \x03(\t\x12\x13\n\x0bindependent\x18\x61 \x03(\x05\x12\x11\n\tdependent\x18\x62 \x03(\x05\x12\x12\n\nnum_labels\x18\x63 \x01(\x05\x12\x13\n\x0bnum_samples\x18\x64 \x01(\x03\x12\x14\n\x0cnum_features\x18\x65 \x01(\x03\x12\x11\n\tseparator\x18\x66 \x01(\t\x12\x11\n\tskip_cols\x18g \x01(\x05\x12\x11\n\tskip_rows\x18h \x01(\x05\x12\x12\n\nhas_header\x18i \x01(\x08\x12\x11\n\tlabel_col\x18j \x01(\x05\x12\x14\n\x0cresponse_col\x18k \x01(\x05\x12\x16\n\x0e\x64isable_labels\x18l \x01(\x08\x12\x19\n\x11\x64isable_responses\x18m \x01(\x08\x12\x0e\n\x06\x66ormat\x18n \x01(\t\x12\x19\n\x11\x64\x61ta_file_pattern\x18o \x01(\t\x12\x15\n\rnum_neighbors\x18p \x01(\x03\x12\x18\n\x10max_neighborhood\x18q \x01(\x03\x12\x16\n\x0enum_image_srcs\x18r \x01(\x05\"\xfc\x0f\n\x11ImagePreprocessor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x11\n\traw_width\x18\x03 \x01(\x05\x12\x12\n\nraw_height\x18\x04 \x01(\x05\x12\x36\n\x07\x63ropper\x18\x05 \x01(\x0b\x32%.lbann_data.ImagePreprocessor.Cropper\x12:\n\taugmenter\x18\x06 \x01(\x0b\x32\'.lbann_data.ImagePreprocessor.Augmenter\x12>\n\x0b\x64\x65\x63olorizer\x18\x07 \x01(\x0b\x32).lbann_data.ImagePreprocessor.Decolorizer\x12:\n\tcolorizer\x18\x08 \x01(\x0b\x32\'.lbann_data.ImagePreprocessor.Colorizer\x12<\n\nsubtractor\x18\t \x01(\x0b\x32(.lbann_data.ImagePreprocessor.Subtractor\x12<\n\nnormalizer\x18\n \x01(\x0b\x32(.lbann_data.ImagePreprocessor.Normalizer\x12\x34\n\x06noiser\x18\x0b \x01(\x0b\x32$.lbann_data.ImagePreprocessor.Noiser\x12\x45\n\x0fpatch_extractor\x18\x0c \x01(\x0b\x32,.lbann_data.ImagePreprocessor.PatchExtractor\x12\r\n\x05scale\x18\r \x01(\x08\x12\x15\n\rsubtract_mean\x18\x0e \x01(\x08\x12\x15\n\runit_variance\x18\x0f \x01(\x08\x12\x0f\n\x07z_score\x18\x10 \x01(\x08\x12\x17\n\x0fhorizontal_flip\x18\x11 \x01(\x08\x12\x15\n\rvertical_flip\x18\x12 \x01(\x08\x12\x10\n\x08rotation\x18\x13 \x01(\x01\x12\x18\n\x10horizontal_shift\x18\x14 \x01(\x01\x12\x16\n\x0evertical_shift\x18\x15 \x01(\x01\x12\x13\n\x0bshear_range\x18\x16 \x01(\x01\x12\x1c\n\x14\x64isable_augmentation\x18\x17 \x01(\x08\x12\x14\n\x0cnoise_factor\x18\x18 \x01(\x02\x12\x13\n\x0bno_colorize\x18\x19 \x01(\x08\x12\x12\n\ncrop_first\x18\x1a \x01(\x08\x12\x12\n\ncrop_width\x18\x1b \x01(\r\x12\x13\n\x0b\x63rop_height\x18\x1c \x01(\r\x12\x15\n\rcrop_randomly\x18\x1d \x01(\x08\x12\x15\n\rresized_width\x18\x1e \x01(\x05\x12\x16\n\x0eresized_height\x18\x1f \x01(\x05\x12\x1e\n\x16\x61\x64\x61ptive_interpolation\x18  \x01(\x08\x12\x1b\n\x13\x65\x61rly_normalization\x18! \x01(\x05\x1a\xb7\x01\n\x07\x43ropper\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x15\n\rcrop_randomly\x18\x03 \x01(\x08\x12\x12\n\ncrop_width\x18\x04 \x01(\r\x12\x13\n\x0b\x63rop_height\x18\x05 \x01(\r\x12\x15\n\rresized_width\x18\x06 \x01(\x05\x12\x16\n\x0eresized_height\x18\x07 \x01(\x05\x12\x1e\n\x16\x61\x64\x61ptive_interpolation\x18\x08 \x01(\x08\x1a\xb3\x01\n\tAugmenter\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x17\n\x0fhorizontal_flip\x18\x03 \x01(\x08\x12\x15\n\rvertical_flip\x18\x04 \x01(\x08\x12\x10\n\x08rotation\x18\x05 \x01(\x01\x12\x18\n\x10horizontal_shift\x18\x06 \x01(\x01\x12\x16\n\x0evertical_shift\x18\x07 \x01(\x01\x12\x13\n\x0bshear_range\x18\x08 \x01(\x01\x1a>\n\x0b\x44\x65\x63olorizer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x10\n\x08pick_1ch\x18\x03 \x01(\x08\x1a*\n\tColorizer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x1ay\n\nNormalizer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\r\n\x05scale\x18\x03 \x01(\x08\x12\x15\n\rsubtract_mean\x18\x04 \x01(\x08\x12\x15\n\runit_variance\x18\x05 \x01(\x08\x12\x0f\n\x07z_score\x18\x06 \x01(\x08\x1a\x8d\x01\n\nSubtractor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x14\n\x0cimage_to_sub\x18\x03 \x01(\t\x12\x14\n\x0cimage_to_div\x18\x04 \x01(\t\x12\x18\n\x0c\x63hannel_mean\x18\x05 \x03(\x02\x42\x02\x10\x01\x12\x1a\n\x0e\x63hannel_stddev\x18\x06 \x03(\x02\x42\x02\x10\x01\x1a\xb7\x01\n\x0ePatchExtractor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x13\n\x0bpatch_width\x18\x03 \x01(\r\x12\x14\n\x0cpatch_height\x18\x04 \x01(\r\x12\x11\n\tpatch_gap\x18\x05 \x01(\r\x12\x14\n\x0cpatch_jitter\x18\x06 \x01(\r\x12\x16\n\x0e\x63\x65ntering_mode\x18\x07 \x01(\r\x12\x1a\n\x12\x63\x61_correction_mode\x18\x08 \x01(\r\x1a\x37\n\x06Noiser\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\x0e\n\x06\x66\x61\x63tor\x18\x03 \x01(\x02\"\xef\x01\n\x13GenericPreprocessor\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12>\n\nnormalizer\x18\x03 \x01(\x0b\x32*.lbann_data.GenericPreprocessor.Normalizer\x1ay\n\nNormalizer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x64isable\x18\x02 \x01(\x08\x12\r\n\x05scale\x18\x03 \x01(\x08\x12\x15\n\rsubtract_mean\x18\x04 \x01(\x08\x12\x15\n\runit_variance\x18\x05 \x01(\x08\x12\x0f\n\x07z_score\x18\x06 \x01(\x08\"\xbb\x05\n\x05Model\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x39\n\x12objective_function\x18\x02 \x01(\x0b\x32\x1d.lbann_data.ObjectiveFunction\x12\"\n\x06metric\x18\x05 \x03(\x0b\x32\x12.lbann_data.Metric\x12\x13\n\x0b\x64\x61ta_layout\x18\x06 \x01(\t\x12\x17\n\x0fmini_batch_size\x18\x0c \x01(\x03\x12\x12\n\nnum_epochs\x18\x04 \x01(\x03\x12\x13\n\x0bsuper_steps\x18y \x01(\x03\x12\x13\n\x0bnum_batches\x18z \x01(\x03\x12\x12\n\nblock_size\x18\x32 \x01(\x03\x12\x17\n\x0fprocs_per_model\x18\x33 \x01(\x03\x12\x10\n\x08num_gpus\x18\x35 \x01(\x03\x12\x1c\n\x14\x65valuation_frequency\x18\x36 \x01(\x03\x12\x1c\n\x14num_parallel_readers\x18\x64 \x01(\x03\x12\x14\n\x0c\x64isable_cuda\x18\x08 \x01(\x08\x12 \n\x05layer\x18\n \x03(\x0b\x32\x11.lbann_data.Layer\x12$\n\x07weights\x18\x0b \x03(\x0b\x32\x13.lbann_data.Weights\x12&\n\x08\x63\x61llback\x18\x14 \x03(\x0b\x32\x14.lbann_data.Callback\x12\x13\n\x0brandom_seed\x18\x1e \x01(\x03\x12&\n\x1erandom_init_models_differently\x18\x1f \x01(\x08\x12.\n\trecurrent\x18$ \x01(\x0b\x32\x1b.lbann_data.Model.Recurrent\x12*\n\x07siamese\x18% \x01(\x0b\x32\x19.lbann_data.Model.Siamese\x1a!\n\tRecurrent\x12\x14\n\x0cunroll_depth\x18\x01 \x01(\r\x1a\x1c\n\x07Siamese\x12\x11\n\tnum_heads\x18\x01 \x01(\r\"\xf3\x06\n\x11ObjectiveFunction\x12\x38\n\x12mean_squared_error\x18\n \x03(\x0b\x32\x1c.lbann_data.MeanSquaredError\x12\x42\n\x17mean_absolute_deviation\x18\x0b \x03(\x0b\x32!.lbann_data.MeanAbsoluteDeviation\x12:\n\x13mean_absolute_error\x18\x18 \x03(\x0b\x32\x1d.lbann_data.MeanAbsoluteError\x12/\n\rcross_entropy\x18\x0c \x03(\x0b\x32\x18.lbann_data.CrossEntropy\x12<\n\x14\x62inary_cross_entropy\x18\r \x03(\x0b\x32\x1e.lbann_data.BinaryCrossEntropy\x12O\n\x1e\x63ross_entropy_with_uncertainty\x18\x0e \x03(\x0b\x32\'.lbann_data.CrossEntropyWithUncertainty\x12\x33\n\x0fgeom_negloglike\x18\x0f \x03(\x0b\x32\x1a.lbann_data.GeomNegLogLike\x12\x39\n\x12poisson_negloglike\x18\x10 \x03(\x0b\x32\x1d.lbann_data.PoissonNegLogLike\x12\x35\n\x10polya_negloglike\x18\x11 \x03(\x0b\x32\x1b.lbann_data.PolyaNegLogLike\x12\x44\n\x18l1_weight_regularization\x18\x14 \x03(\x0b\x32\".lbann_data.L1WeightRegularization\x12\x44\n\x18l2_weight_regularization\x18\x15 \x03(\x0b\x32\".lbann_data.L2WeightRegularization\x12U\n!group_lasso_weight_regularization\x18\x16 \x03(\x0b\x32*.lbann_data.GroupLassoWeightRegularization\x12/\n\rkl_divergence\x18\x17 \x03(\x0b\x32\x18.lbann_data.KLDivergence\x12)\n\nlayer_term\x18\x19 \x03(\x0b\x32\x15.lbann_data.LayerTerm\"(\n\x10MeanSquaredError\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"-\n\x15MeanAbsoluteDeviation\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\")\n\x11MeanAbsoluteError\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"$\n\x0c\x43rossEntropy\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"*\n\x12\x42inaryCrossEntropy\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"3\n\x1b\x43rossEntropyWithUncertainty\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"&\n\x0eGeomNegLogLike\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\")\n\x11PoissonNegLogLike\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"\'\n\x0fPolyaNegLogLike\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\".\n\x16L1WeightRegularization\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\".\n\x16L2WeightRegularization\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\"6\n\x1eGroupLassoWeightRegularization\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\".\n\x0cKLDivergence\x12\x0e\n\x06layer1\x18\x01 \x01(\t\x12\x0e\n\x06layer2\x18\x02 \x01(\t\"0\n\tLayerTerm\x12\x14\n\x0cscale_factor\x18\x01 \x01(\x01\x12\r\n\x05layer\x18\x02 \x01(\t\"\x91\x05\n\x06Metric\x12=\n\x14\x63\x61tegorical_accuracy\x18\x01 \x01(\x0b\x32\x1f.lbann_data.CategoricalAccuracy\x12G\n\x1atop_k_categorical_accuracy\x18\x02 \x01(\x0b\x32#.lbann_data.TopKCategoricalAccuracy\x12\x38\n\x12mean_squared_error\x18\x03 \x01(\x0b\x32\x1c.lbann_data.MeanSquaredError\x12\x42\n\x17mean_absolute_deviation\x18\x04 \x01(\x0b\x32!.lbann_data.MeanAbsoluteDeviation\x12:\n\x13mean_absolute_error\x18\x06 \x01(\x0b\x32\x1d.lbann_data.MeanAbsoluteError\x12;\n\x13pearson_correlation\x18\x05 \x01(\x0b\x32\x1e.lbann_data.PearsonCorrelation\x12\x1a\n\x02r2\x18\x07 \x01(\x0b\x32\x0e.lbann_data.R2\x12\x35\n\x10\x62oolean_accuracy\x18\x08 \x01(\x0b\x32\x1b.lbann_data.BooleanAccuracy\x12\x42\n\x17\x62oolean_false_positives\x18\t \x01(\x0b\x32!.lbann_data.BooleanFalsePositives\x12\x42\n\x17\x62oolean_false_negatives\x18\n \x01(\x0b\x32!.lbann_data.BooleanFalseNegatives\x12-\n\x0clayer_metric\x18\x0b \x01(\x0b\x32\x17.lbann_data.LayerMetric\"\x15\n\x13\x43\x61tegoricalAccuracy\"(\n\x17TopKCategoricalAccuracy\x12\r\n\x05top_k\x18\x02 \x01(\x03\"\x14\n\x12PearsonCorrelation\"\x04\n\x02R2\"\x11\n\x0f\x42ooleanAccuracy\"\x17\n\x15\x42ooleanFalsePositives\"\x17\n\x15\x42ooleanFalseNegatives\"*\n\x0bLayerMetric\x12\x0c\n\x04unit\x18\x01 \x01(\t\x12\r\n\x05layer\x18\x02 \x01(\t\"\xd0\x01\n\tOptimizer\x12$\n\x07\x61\x64\x61grad\x18\x01 \x01(\x0b\x32\x13.lbann_data.Adagrad\x12$\n\x07rmsprop\x18\x02 \x01(\x0b\x32\x13.lbann_data.Rmsprop\x12\x1e\n\x04\x61\x64\x61m\x18\x03 \x01(\x0b\x32\x10.lbann_data.Adam\x12\x39\n\x12hypergradient_adam\x18\x04 \x01(\x0b\x32\x1d.lbann_data.HypergradientAdam\x12\x1c\n\x03sgd\x18\x05 \x01(\x0b\x32\x0f.lbann_data.Sgd\"*\n\x07\x41\x64\x61grad\x12\x12\n\nlearn_rate\x18\x01 \x01(\x01\x12\x0b\n\x03\x65ps\x18\x02 \x01(\x01\"E\n\x04\x41\x64\x61m\x12\x12\n\nlearn_rate\x18\x01 \x01(\x01\x12\r\n\x05\x62\x65ta1\x18\x06 \x01(\x01\x12\r\n\x05\x62\x65ta2\x18\x07 \x01(\x01\x12\x0b\n\x03\x65ps\x18\x08 \x01(\x01\"w\n\x11HypergradientAdam\x12\x1a\n\x12init_learning_rate\x18\x01 \x01(\x01\x12\x1b\n\x13hyper_learning_rate\x18\x02 \x01(\x01\x12\r\n\x05\x62\x65ta1\x18\x06 \x01(\x01\x12\r\n\x05\x62\x65ta2\x18\x07 \x01(\x01\x12\x0b\n\x03\x65ps\x18\x08 \x01(\x01\">\n\x07Rmsprop\x12\x12\n\nlearn_rate\x18\x01 \x01(\x01\x12\x12\n\ndecay_rate\x18\x02 \x01(\x01\x12\x0b\n\x03\x65ps\x18\x03 \x01(\x01\"Q\n\x03Sgd\x12\x12\n\nlearn_rate\x18\x01 \x01(\x01\x12\x10\n\x08momentum\x18\x02 \x01(\x01\x12\x12\n\ndecay_rate\x18\x03 \x01(\x01\x12\x10\n\x08nesterov\x18\x04 \x01(\x08\"\x80\x0e\n\x08\x43\x61llback\x12(\n\x05print\x18\x01 \x01(\x0b\x32\x19.lbann_data.CallbackPrint\x12(\n\x05timer\x18\x02 \x01(\x0b\x32\x19.lbann_data.CallbackTimer\x12,\n\x07summary\x18\x03 \x01(\x0b\x32\x1b.lbann_data.CallbackSummary\x12\x35\n\x0c\x64ump_weights\x18\x04 \x01(\x0b\x32\x1f.lbann_data.CallbackDumpWeights\x12=\n\x10\x64ump_activations\x18\x05 \x01(\x0b\x32#.lbann_data.CallbackDumpActivations\x12\x39\n\x0e\x64ump_gradients\x18\x06 \x01(\x0b\x32!.lbann_data.CallbackDumpGradients\x12:\n\x0f\x64ump_mb_indices\x18\x07 \x01(\x0b\x32!.lbann_data.CallbackDumpMBIndices\x12\x36\n\rdisp_io_stats\x18\x08 \x01(\x0b\x32\x1f.lbann_data.CallbackDispIOStats\x12*\n\x06imcomm\x18\t \x01(\x0b\x32\x1a.lbann_data.CallbackImComm\x12\x33\n\x0bsave_images\x18\n \x01(\x0b\x32\x1e.lbann_data.CallbackSaveImages\x12(\n\x05\x64\x65\x62ug\x18\x0b \x01(\x0b\x32\x19.lbann_data.CallbackDebug\x12H\n\x16\x61\x64\x61ptive_learning_rate\x18\x0c \x01(\x0b\x32(.lbann_data.CallbackAdaptiveLearningRate\x12@\n\x12step_learning_rate\x18\r \x01(\x0b\x32$.lbann_data.CallbackStepLearningRate\x12\x44\n\x14\x63ustom_learning_rate\x18\x0e \x01(\x0b\x32&.lbann_data.CallbackCustomLearningRate\x12\x33\n\x0b\x63heck_small\x18\x0f \x01(\x0b\x32\x1e.lbann_data.CallbackCheckSmall\x12/\n\tcheck_nan\x18\x10 \x01(\x0b\x32\x1c.lbann_data.CallbackCheckNaN\x12\x37\n\rcheck_dataset\x18\x11 \x01(\x0b\x32 .lbann_data.CallbackCheckDataset\x12&\n\x04hang\x18\x12 \x01(\x0b\x32\x18.lbann_data.CallbackHang\x12K\n\x18\x64rop_fixed_learning_rate\x18\x13 \x01(\x0b\x32).lbann_data.CallbackDropFixedLearningRate\x12Q\n\x1blinear_growth_learning_rate\x18\x14 \x01(\x0b\x32,.lbann_data.CallbackLinearGrowthLearningRate\x12.\n\x08profiler\x18\x15 \x01(\x0b\x32\x1c.lbann_data.CallbackProfiler\x12\x39\n\x0estep_minibatch\x18\x16 \x01(\x0b\x32!.lbann_data.CallbackStepMinibatch\x12\x39\n\x0egradient_check\x18\x17 \x01(\x0b\x32!.lbann_data.CallbackGradientCheck\x12&\n\x04ltfb\x18\x18 \x01(\x0b\x32\x18.lbann_data.CallbackLTFB\x12-\n\x08\x64\x65\x62ug_io\x18\x19 \x01(\x0b\x32\x1b.lbann_data.CallbackDebugIO\x12\x41\n\x12minibatch_schedule\x18\x1a \x01(\x0b\x32%.lbann_data.CallbackMinibatchSchedule\x12\x63\n$optimizerwise_adaptive_learning_rate\x18\x1b \x01(\x0b\x32\x35.lbann_data.CallbackOptimizerwiseAdaptiveLearningRate\x12\x32\n\ncheckpoint\x18\x1c \x01(\x0b\x32\x1e.lbann_data.CallbackCheckpoint\x12\x31\n\nsave_model\x18\x1d \x01(\x0b\x32\x1d.lbann_data.CallbackSaveModel\x12@\n\x12poly_learning_rate\x18\x1e \x01(\x0b\x32$.lbann_data.CallbackPolyLearningRate\x12;\n\x0freplace_weights\x18\x1f \x01(\x0b\x32\".lbann_data.CallbackReplaceWeights\"\"\n\x0c\x43\x61llbackLTFB\x12\x12\n\nround_size\x18\x01 \x01(\x03\"F\n\x18\x43\x61llbackStepLearningRate\x12\x0f\n\x07weights\x18\x01 \x01(\t\x12\x0c\n\x04step\x18\x02 \x01(\x03\x12\x0b\n\x03\x61mt\x18\x03 \x01(\x01\"\x1c\n\x1a\x43\x61llbackCustomLearningRate\"N\n\x1c\x43\x61llbackAdaptiveLearningRate\x12\x0f\n\x07weights\x18\x01 \x01(\t\x12\x10\n\x08patience\x18\x02 \x01(\x03\x12\x0b\n\x03\x61mt\x18\x03 \x01(\x01\"O\n\x12\x43\x61llbackSaveImages\x12\x11\n\timage_dir\x18\x01 \x01(\t\x12\x13\n\x0blayer_names\x18\x02 \x01(\t\x12\x11\n\textension\x18\x03 \x01(\t\"!\n\rCallbackPrint\x12\x10\n\x08interval\x18\x01 \x01(\x03\"\x12\n\x10\x43\x61llbackProfiler\"\x0f\n\rCallbackTimer\"L\n\x0f\x43\x61llbackSummary\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\x12\x16\n\x0e\x62\x61tch_interval\x18\x02 \x01(\x03\x12\x14\n\x0cmat_interval\x18\x03 \x01(\x03\"\'\n\x13\x43\x61llbackDumpWeights\x12\x10\n\x08\x62\x61sename\x18\x01 \x01(\t\"R\n\x17\x43\x61llbackDumpActivations\x12\x10\n\x08\x62\x61sename\x18\x01 \x01(\t\x12\x10\n\x08interval\x18\x02 \x01(\x03\x12\x13\n\x0blayer_names\x18\x03 \x01(\t\";\n\x15\x43\x61llbackDumpGradients\x12\x10\n\x08\x62\x61sename\x18\x01 \x01(\t\x12\x10\n\x08interval\x18\x02 \x01(\x03\";\n\x15\x43\x61llbackDumpMBIndices\x12\x10\n\x08\x62\x61sename\x18\x01 \x01(\t\x12\x10\n\x08interval\x18\x02 \x01(\x03\"%\n\x13\x43\x61llbackDispIOStats\x12\x0e\n\x06layers\x18\x01 \x01(\t\"H\n\x0e\x43\x61llbackImComm\x12\x1e\n\x16intermodel_comm_method\x18\x01 \x01(\t\x12\x16\n\x0e\x61ll_optimizers\x18\x02 \x01(\x08\"\x1e\n\rCallbackDebug\x12\r\n\x05phase\x18\x01 \x01(\t\"-\n\x0f\x43\x61llbackDebugIO\x12\r\n\x05phase\x18\x01 \x01(\t\x12\x0b\n\x03lvl\x18\x02 \x01(\x05\"\x14\n\x12\x43\x61llbackCheckSmall\"\x12\n\x10\x43\x61llbackCheckNaN\"\x16\n\x14\x43\x61llbackCheckDataset\"\x1c\n\x0c\x43\x61llbackHang\x12\x0c\n\x04rank\x18\x01 \x01(\x03\"Q\n\x1d\x43\x61llbackDropFixedLearningRate\x12\x0f\n\x07weights\x18\x01 \x01(\t\x12\x12\n\ndrop_epoch\x18\x02 \x03(\x03\x12\x0b\n\x03\x61mt\x18\x03 \x01(\x01\"f\n CallbackLinearGrowthLearningRate\x12\x0f\n\x07weights\x18\x01 \x01(\t\x12\x0e\n\x06target\x18\x02 \x01(\x01\x12\x12\n\nnum_epochs\x18\x03 \x01(\x03\x12\r\n\x05\x64\x65lay\x18\x04 \x01(\x03\"`\n\x18\x43\x61llbackPolyLearningRate\x12\x0f\n\x07weights\x18\x01 \x01(\t\x12\r\n\x05power\x18\x02 \x01(\x01\x12\x12\n\nnum_epochs\x18\x03 \x01(\x04\x12\x10\n\x08max_iter\x18\x04 \x01(\x04\"Q\n\x15\x43\x61llbackStepMinibatch\x12\x17\n\x0fstarting_mbsize\x18\x01 \x01(\x03\x12\x0c\n\x04step\x18\x02 \x01(\x03\x12\x11\n\tramp_time\x18\x03 \x01(\x03\"U\n\x15MinibatchScheduleStep\x12\r\n\x05\x65poch\x18\x01 \x01(\x03\x12\x0e\n\x06mbsize\x18\x02 \x01(\x03\x12\n\n\x02lr\x18\x03 \x01(\x01\x12\x11\n\tramp_time\x18\x04 \x01(\x03\"K\n)CallbackOptimizerwiseAdaptiveLearningRate\x12\x0f\n\x07weights\x18\x01 \x01(\t\x12\r\n\x05scale\x18\x02 \x01(\x01\"e\n\x19\x43\x61llbackMinibatchSchedule\x12\x17\n\x0fstarting_mbsize\x18\x01 \x01(\x03\x12/\n\x04step\x18\x02 \x03(\x0b\x32!.lbann_data.MinibatchScheduleStep\"R\n\x15\x43\x61llbackGradientCheck\x12\x11\n\tstep_size\x18\x01 \x01(\x01\x12\x0f\n\x07verbose\x18\x02 \x01(\x08\x12\x15\n\rfail_on_error\x18\x03 \x01(\x08\"\xc3\x01\n\x12\x43\x61llbackCheckpoint\x12\x16\n\x0e\x63heckpoint_dir\x18\x01 \x01(\t\x12\x19\n\x11\x63heckpoint_epochs\x18\x02 \x01(\x03\x12\x18\n\x10\x63heckpoint_steps\x18\x03 \x01(\x03\x12\x17\n\x0f\x63heckpoint_secs\x18\x04 \x01(\x01\x12\x14\n\x0cper_rank_dir\x18\x05 \x01(\t\x12\x18\n\x10\x63kpt_dist_epochs\x18\x06 \x01(\x03\x12\x17\n\x0f\x63kpt_dist_steps\x18\x07 \x01(\x03\"3\n\x11\x43\x61llbackSaveModel\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\x12\x11\n\textension\x18\x02 \x01(\t\"c\n\x16\x43\x61llbackReplaceWeights\x12\x15\n\rsource_layers\x18\x01 \x01(\t\x12\x1a\n\x12\x64\x65stination_layers\x18\x02 \x01(\t\x12\x16\n\x0e\x62\x61tch_interval\x18\x03 \x01(\x03\"\x9a\x05\n\x07Weights\x12\x0c\n\x04name\x18\x01 \x01(\t\x12(\n\toptimizer\x18\x02 \x01(\x0b\x32\x15.lbann_data.Optimizer\x12=\n\x14\x63onstant_initializer\x18\x14 \x01(\x0b\x32\x1f.lbann_data.ConstantInitializer\x12;\n\x13uniform_initializer\x18\x15 \x01(\x0b\x32\x1e.lbann_data.UniformInitializer\x12\x39\n\x12normal_initializer\x18\x16 \x01(\x0b\x32\x1d.lbann_data.NormalInitializer\x12\x46\n\x19glorot_normal_initializer\x18\x17 \x01(\x0b\x32#.lbann_data.GlorotNormalInitializer\x12H\n\x1aglorot_uniform_initializer\x18\x18 \x01(\x0b\x32$.lbann_data.GlorotUniformInitializer\x12>\n\x15he_normal_initializer\x18\x19 \x01(\x0b\x32\x1f.lbann_data.HeNormalInitializer\x12@\n\x16he_uniform_initializer\x18\x1a \x01(\x0b\x32 .lbann_data.HeUniformInitializer\x12\x44\n\x18lecun_normal_initializer\x18\x1b \x01(\x0b\x32\".lbann_data.LeCunNormalInitializer\x12\x46\n\x19lecun_uniform_initializer\x18\x1c \x01(\x0b\x32#.lbann_data.LeCunUniformInitializer\"$\n\x13\x43onstantInitializer\x12\r\n\x05value\x18\x01 \x01(\x01\".\n\x12UniformInitializer\x12\x0b\n\x03min\x18\x01 \x01(\x01\x12\x0b\n\x03max\x18\x02 \x01(\x01\"=\n\x11NormalInitializer\x12\x0c\n\x04mean\x18\x01 \x01(\x01\x12\x1a\n\x12standard_deviation\x18\x02 \x01(\x01\"\x19\n\x17GlorotNormalInitializer\"\x1a\n\x18GlorotUniformInitializer\"\x15\n\x13HeNormalInitializer\"\x16\n\x14HeUniformInitializer\"\x18\n\x16LeCunNormalInitializer\"\x19\n\x17LeCunUniformInitializer\"\x1f\n\x0cWeightsShape\x12\x0f\n\x03\x64im\x18\x01 \x03(\x03\x42\x02\x10\x01\"\x99\x01\n\x0bWeightsData\x12\'\n\x05shape\x18\x05 \x01(\x0b\x32\x18.lbann_data.WeightsShape\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06height\x18\x02 \x01(\x03\x12\r\n\x05width\x18\x03 \x01(\x03\x12\x10\n\x04\x64\x61ta\x18\x04 \x03(\x02\x42\x02\x10\x01\x12\"\n\x06imcomm\x18\x37 \x01(\x0e\x32\x12.lbann_data.Imcomm\"4\n\x10MotifDefinitions\x12 \n\x05motif\x18\x01 \x03(\x0b\x32\x11.lbann_data.Motif\"7\n\x05Motif\x12\x0c\n\x04name\x18\x01 \x01(\t\x12 \n\x05layer\x18\x02 \x03(\x0b\x32\x11.lbann_data.Layer\"\xa5\x13\n\x05Layer\x12\x0c\n\x04name\x18\x32 \x01(\t\x12\x10\n\x07parents\x18\x97\x01 \x01(\t\x12\x11\n\x08\x63hildren\x18\x98\x01 \x01(\t\x12\x13\n\x0b\x64\x61ta_layout\x18\x34 \x01(\t\x12\x19\n\x11\x64\x65vice_allocation\x18\x37 \x01(\t\x12\x0f\n\x07weights\x18\x36 \x01(\t\x12$\n\x1cnum_neurons_from_data_reader\x18\x35 \x01(\x08\x12\x0e\n\x06\x66reeze\x18\x05 \x01(\x08\x12.\n\x0cweights_data\x18\x99\x01 \x03(\x0b\x32\x17.lbann_data.WeightsData\x12\x0c\n\x03top\x18\x9a\x01 \x01(\t\x12\x0f\n\x06\x62ottom\x18\x9b\x01 \x01(\t\x12\r\n\x04type\x18\x9c\x01 \x01(\t\x12+\n\x0bmotif_layer\x18\x04 \x01(\x0b\x32\x16.lbann_data.MotifLayer\x12 \n\x05input\x18\x02 \x01(\x0b\x32\x11.lbann_data.Input\x12\x31\n\x0erepeated_input\x18\x06 \x01(\x0b\x32\x19.lbann_data.RepeatedInput\x12%\n\x07reshape\x18\xb2\x02 \x01(\x0b\x32\x13.lbann_data.Reshape\x12$\n\x07pooling\x18\x0c \x01(\x0b\x32\x13.lbann_data.Pooling\x12\x31\n\rconcatenation\x18\xac\x02 \x01(\x0b\x32\x19.lbann_data.Concatenation\x12!\n\x05slice\x18\xad\x02 \x01(\x0b\x32\x11.lbann_data.Slice\x12!\n\x05split\x18\xae\x02 \x01(\x0b\x32\x11.lbann_data.Split\x12\x1d\n\x03sum\x18\xaf\x02 \x01(\x0b\x32\x0f.lbann_data.Sum\x12)\n\tunpooling\x18\xb0\x02 \x01(\x0b\x32\x15.lbann_data.Unpooling\x12\'\n\x08hadamard\x18\xb4\x02 \x01(\x0b\x32\x14.lbann_data.Hadamard\x12\'\n\x08\x63onstant\x18\xb5\x02 \x01(\x0b\x32\x14.lbann_data.Constant\x12\x1f\n\x04zero\x18\xbb\x02 \x01(\x0b\x32\x10.lbann_data.Zero\x12)\n\treduction\x18\xb6\x02 \x01(\x0b\x32\x15.lbann_data.Reduction\x12+\n\nevaluation\x18\xb7\x02 \x01(\x0b\x32\x16.lbann_data.Evaluation\x12\'\n\x08gaussian\x18\xb8\x02 \x01(\x0b\x32\x14.lbann_data.Gaussian\x12)\n\tbernoulli\x18\xb9\x02 \x01(\x0b\x32\x15.lbann_data.Bernoulli\x12%\n\x07uniform\x18\xba\x02 \x01(\x0b\x32\x13.lbann_data.Uniform\x12\x1f\n\x04\x63rop\x18\xbc\x02 \x01(\x0b\x32\x10.lbann_data.Crop\x12:\n\x12\x63\x61tegorical_random\x18\xbd\x02 \x01(\x0b\x32\x1d.lbann_data.CategoricalRandom\x12\x34\n\x0f\x64iscrete_random\x18\xbe\x02 \x01(\x0b\x32\x1a.lbann_data.DiscreteRandom\x12\x30\n\rstop_gradient\x18\xbf\x02 \x01(\x0b\x32\x18.lbann_data.StopGradient\x12\x1d\n\x03max\x18\xc0\x02 \x01(\x0b\x32\x0f.lbann_data.Max\x12\x1d\n\x03min\x18\xc1\x02 \x01(\x0b\x32\x0f.lbann_data.Min\x12\x33\n\x0f\x66ully_connected\x18\x0b \x01(\x0b\x32\x1a.lbann_data.FullyConnected\x12,\n\x0b\x63onvolution\x18\r \x01(\x0b\x32\x17.lbann_data.Convolution\x12\x31\n\rdeconvolution\x18\xb1\x02 \x01(\x0b\x32\x19.lbann_data.Deconvolution\x12\"\n\x06target\x18\x12 \x01(\x0b\x32\x12.lbann_data.Target\x12\x38\n\x0ereconstruction\x18\x16 \x01(\x0b\x32 .lbann_data.TargetReconstruction\x12;\n\x13\x62\x61tch_normalization\x18\x13 \x01(\x0b\x32\x1e.lbann_data.BatchNormalization\x12L\n\x1clocal_response_normalization\x18\x14 \x01(\x0b\x32&.lbann_data.LocalResponseNormalization\x12$\n\x07\x64ropout\x18\x15 \x01(\x0b\x32\x13.lbann_data.Dropout\x12.\n\x0cselu_dropout\x18\xe5\x01 \x01(\x0b\x32\x17.lbann_data.SeluDropout\x12%\n\x07softmax\x18\xc8\x01 \x01(\x0b\x32\x13.lbann_data.Softmax\x12\x1c\n\x03\x65lu\x18\x1e \x01(\x0b\x32\x0f.lbann_data.ELU\x12&\n\x08identity\x18\x1f \x01(\x0b\x32\x14.lbann_data.Identity\x12)\n\nleaky_relu\x18  \x01(\x0b\x32\x15.lbann_data.LeakyRelu\x12\x1e\n\x04relu\x18! \x01(\x0b\x32\x10.lbann_data.Relu\x12$\n\x07sigmoid\x18\" \x01(\x0b\x32\x13.lbann_data.Sigmoid\x12+\n\x0bsmooth_relu\x18# \x01(\x0b\x32\x16.lbann_data.SmoothRelu\x12&\n\x08softplus\x18$ \x01(\x0b\x32\x14.lbann_data.Softplus\x12\x1e\n\x04selu\x18% \x01(\x0b\x32\x10.lbann_data.Selu\x12\x1e\n\x04tanh\x18& \x01(\x0b\x32\x10.lbann_data.Tanh\x12\x1e\n\x04\x61tan\x18\' \x01(\x0b\x32\x10.lbann_data.Atan\x12/\n\rbent_identity\x18( \x01(\x0b\x32\x18.lbann_data.BentIdentity\x12,\n\x0b\x65xponential\x18) \x01(\x0b\x32\x17.lbann_data.Exponential\x12 \n\x05swish\x18* \x01(\x0b\x32\x11.lbann_data.Swish\x12 \n\x05power\x18+ \x01(\x0b\x32\x11.lbann_data.Power\x12\x1c\n\x03\x61\x62s\x18, \x01(\x0b\x32\x0f.lbann_data.Abs\x12#\n\x07l2_loss\x18- \x01(\x0b\x32\x12.lbann_data.L2Loss\x12\x1c\n\x03log\x18. \x01(\x0b\x32\x0f.lbann_data.Log\x12M\n\x0f\x62\x63\x65_with_logits\x18/ \x01(\x0b\x32\x34.lbann_data.Sigmoid_Binary_Cross_Entropy_With_Logits\"0\n\nMotifLayer\x12\x10\n\x08motif_id\x18\x01 \x01(\t\x12\x10\n\x08variable\x18\x02 \x03(\t\"\x14\n\x03\x45LU\x12\r\n\x05\x61lpha\x18\x02 \x01(\x01\"\n\n\x08Identity\"\x19\n\tLeakyRelu\x12\x0c\n\x04leak\x18\x02 \x01(\x01\"\x06\n\x04Relu\"\t\n\x07Sigmoid\"\x0c\n\nSmoothRelu\"\n\n\x08Softplus\"\x06\n\x04Tanh\"\x06\n\x04\x41tan\"\x0e\n\x0c\x42\x65ntIdentity\"\r\n\x0b\x45xponential\"\x07\n\x05Swish\"$\n\x04Selu\x12\r\n\x05\x61lpha\x18\x02 \x01(\x01\x12\r\n\x05scale\x18\x03 \x01(\x01\"\t\n\x07Softmax\"\x19\n\x05Power\x12\x10\n\x08\x65xponent\x18\x01 \x01(\x01\"\x05\n\x03\x41\x62s\"\x08\n\x06L2Loss\"\x13\n\x03Log\x12\x0c\n\x04\x62\x61se\x18\x01 \x01(\x01\">\n(Sigmoid_Binary_Cross_Entropy_With_Logits\x12\x12\n\ntrue_label\x18\x01 \x01(\x05\"q\n\x12\x42\x61tchNormalization\x12\r\n\x05\x64\x65\x63\x61y\x18\x01 \x01(\x01\x12\x12\n\nscale_init\x18\x02 \x01(\x01\x12\x11\n\tbias_init\x18\x03 \x01(\x01\x12\x0f\n\x07\x65psilon\x18\x04 \x01(\x01\x12\x14\n\x0cglobal_stats\x18\x05 \x01(\x08\">\n\x0bSeluDropout\x12\x11\n\tkeep_prob\x18\x02 \x01(\x01\x12\r\n\x05\x61lpha\x18\x03 \x01(\x01\x12\r\n\x05scale\x18\x04 \x01(\x01\"f\n\x1aLocalResponseNormalization\x12\x14\n\x0cwindow_width\x18\x04 \x01(\x03\x12\x11\n\tlrn_alpha\x18\x05 \x01(\x01\x12\x10\n\x08lrn_beta\x18\x06 \x01(\x01\x12\r\n\x05lrn_k\x18\x07 \x01(\x01\"\x1c\n\x07\x44ropout\x12\x11\n\tkeep_prob\x18\x02 \x01(\x01\"N\n\x05Input\x12\x1a\n\x12\x64\x61ta_set_per_model\x18\x01 \x01(\x08\x12\x11\n\tio_buffer\x18\x02 \x01(\t\x12\x16\n\x0e\x66or_regression\x18\x03 \x01(\x08\"V\n\rRepeatedInput\x12\x1a\n\x12\x64\x61ta_set_per_model\x18\x01 \x01(\x08\x12\x16\n\x0e\x66or_regression\x18\x02 \x01(\x08\x12\x11\n\tnum_steps\x18\x03 \x01(\x03\"S\n\x07Reshape\x12\x10\n\x08num_dims\x18\x01 \x01(\x03\x12\x0c\n\x04\x64ims\x18\x02 \x01(\t\x12(\n reshape_to_flattened_conv_format\x18\x03 \x01(\x08\"\xc1\x01\n\x07Pooling\x12\x10\n\x08num_dims\x18\x01 \x01(\x03\x12\x13\n\x0bhas_vectors\x18\x02 \x01(\x08\x12\x11\n\tpool_dims\x18\x04 \x01(\t\x12\x11\n\tpool_pads\x18\x05 \x01(\t\x12\x14\n\x0cpool_strides\x18\x06 \x01(\t\x12\x13\n\x0bpool_dims_i\x18\n \x01(\x03\x12\x13\n\x0bpool_pads_i\x18\x0b \x01(\x03\x12\x16\n\x0epool_strides_i\x18\x0c \x01(\x03\x12\x11\n\tpool_mode\x18\x07 \x01(\t\"4\n\tUnpooling\x12\x10\n\x08num_dims\x18\x01 \x01(\x03\x12\x15\n\rpooling_layer\x18\r \x01(\t\"<\n\rConcatenation\x12\x0f\n\x07parents\x18\x01 \x01(\t\x12\x1a\n\x12\x63oncatenation_axis\x18\x02 \x01(\x03\"1\n\x05Slice\x12\x12\n\nslice_axis\x18\x02 \x01(\x03\x12\x14\n\x0cslice_points\x18\x03 \x01(\t\"\x07\n\x05Split\"\x1e\n\x03Sum\x12\x17\n\x0fscaling_factors\x18\x01 \x01(\t\"\n\n\x08Hadamard\".\n\x08\x43onstant\x12\r\n\x05value\x18\x01 \x01(\x01\x12\x13\n\x0bnum_neurons\x18\x02 \x01(\t\"/\n\x04Zero\x12\x12\n\nfirst_half\x18\x01 \x01(\x08\x12\x13\n\x0bsecond_half\x18\x02 \x01(\x08\"\x19\n\tReduction\x12\x0c\n\x04mode\x18\x01 \x01(\t\"\x0c\n\nEvaluation\"<\n\x08Gaussian\x12\x0c\n\x04mean\x18\x01 \x01(\x01\x12\r\n\x05stdev\x18\x02 \x01(\x01\x12\x13\n\x0bneuron_dims\x18\x03 \x01(\t\".\n\tBernoulli\x12\x0c\n\x04prob\x18\x01 \x01(\x01\x12\x13\n\x0bneuron_dims\x18\x02 \x01(\t\"8\n\x07Uniform\x12\x0b\n\x03min\x18\x01 \x01(\x01\x12\x0b\n\x03max\x18\x02 \x01(\x01\x12\x13\n\x0bneuron_dims\x18\x03 \x01(\t\"\x14\n\x04\x43rop\x12\x0c\n\x04\x64ims\x18\x03 \x01(\t\"\x13\n\x11\x43\x61tegoricalRandom\".\n\x0e\x44iscreteRandom\x12\x0e\n\x06values\x18\x01 \x01(\t\x12\x0c\n\x04\x64ims\x18\x02 \x01(\t\"\x0e\n\x0cStopGradient\"\x05\n\x03Max\"\x05\n\x03Min\"\xf5\x01\n\x0e\x46ullyConnected\x12\x13\n\x0bnum_neurons\x18\x01 \x01(\x03\x12\x1d\n\x15weight_initialization\x18\x02 \x01(\t\x12\x10\n\x08has_bias\x18\x03 \x01(\x08\x12\x1a\n\x12\x62ias_initial_value\x18\x04 \x01(\x01\x12 \n\x18l2_regularization_factor\x18\x05 \x01(\x01\x12)\n!group_lasso_regularization_factor\x18\x06 \x01(\x01\x12\x11\n\ttranspose\x18\x07 \x01(\x08\x12!\n\x19num_neurons_is_num_labels\x18\x08 \x01(\x08\"\xbe\x02\n\x0b\x43onvolution\x12\x10\n\x08num_dims\x18\x01 \x01(\x03\x12\x1b\n\x13num_output_channels\x18\x04 \x01(\x03\x12\x13\n\x0bhas_vectors\x18\x02 \x01(\x08\x12\x11\n\tconv_dims\x18\x05 \x01(\t\x12\x11\n\tconv_pads\x18\x06 \x01(\t\x12\x14\n\x0c\x63onv_strides\x18\x07 \x01(\t\x12\x13\n\x0b\x63onv_dims_i\x18\x32 \x01(\x03\x12\x13\n\x0b\x63onv_pads_i\x18< \x01(\x03\x12\x16\n\x0e\x63onv_strides_i\x18\x46 \x01(\x03\x12\x1d\n\x15weight_initialization\x18\t \x01(\t\x12\x10\n\x08has_bias\x18\n \x01(\x08\x12\x1a\n\x12\x62ias_initial_value\x18\x0b \x01(\x01\x12 \n\x18l2_regularization_factor\x18\x0c \x01(\x01\"\xc0\x02\n\rDeconvolution\x12\x10\n\x08num_dims\x18\x01 \x01(\x03\x12\x1b\n\x13num_output_channels\x18\x04 \x01(\x03\x12\x13\n\x0bhas_vectors\x18\x02 \x01(\x08\x12\x11\n\tconv_dims\x18\x05 \x01(\t\x12\x11\n\tconv_pads\x18\x06 \x01(\t\x12\x14\n\x0c\x63onv_strides\x18\x07 \x01(\t\x12\x13\n\x0b\x63onv_dims_i\x18\x32 \x01(\x03\x12\x13\n\x0b\x63onv_pads_i\x18< \x01(\x03\x12\x16\n\x0e\x63onv_strides_i\x18\x46 \x01(\x03\x12\x1d\n\x15weight_initialization\x18\t \x01(\t\x12\x10\n\x08has_bias\x18\n \x01(\x08\x12\x1a\n\x12\x62ias_initial_value\x18\x0b \x01(\x01\x12 \n\x18l2_regularization_factor\x18\x0c \x01(\x01\"k\n\x06Target\x12\x1a\n\x12paired_input_layer\x18\x01 \x01(\t\x12\x1a\n\x12shared_data_reader\x18\x02 \x01(\x08\x12\x16\n\x0e\x66or_regression\x18\x03 \x01(\x08\x12\x11\n\tio_buffer\x18\x04 \x01(\t\".\n\x14TargetReconstruction\x12\x16\n\x0eoriginal_layer\x18\x01 \x01(\t*/\n\x06Imcomm\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0b\n\x07\x45XCLUDE\x10\x01\x12\x0b\n\x07INCLUDE\x10\x02\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_IMCOMM = _descriptor.EnumDescriptor(
  name='Imcomm',
  full_name='lbann_data.Imcomm',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXCLUDE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INCLUDE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=17521,
  serialized_end=17568,
)
_sym_db.RegisterEnumDescriptor(_IMCOMM)

Imcomm = enum_type_wrapper.EnumTypeWrapper(_IMCOMM)
DEFAULT = 0
EXCLUDE = 1
INCLUDE = 2



_LBANNPB = _descriptor.Descriptor(
  name='LbannPB',
  full_name='lbann_data.LbannPB',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_reader', full_name='lbann_data.LbannPB.data_reader', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='lbann_data.LbannPB.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optimizer', full_name='lbann_data.LbannPB.optimizer', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='motif_definitions', full_name='lbann_data.LbannPB.motif_definitions', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=215,
)


_DATAREADER = _descriptor.Descriptor(
  name='DataReader',
  full_name='lbann_data.DataReader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='max_par_io_size', full_name='lbann_data.DataReader.max_par_io_size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reader', full_name='lbann_data.DataReader.reader', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=290,
)


_READER = _descriptor.Descriptor(
  name='Reader',
  full_name='lbann_data.Reader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.Reader.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='role', full_name='lbann_data.Reader.role', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shuffle', full_name='lbann_data.Reader.shuffle', index=2,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_filedir', full_name='lbann_data.Reader.data_filedir', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_local_filedir', full_name='lbann_data.Reader.data_local_filedir', index=4,
      number=50, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_filename', full_name='lbann_data.Reader.data_filename', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label_filename', full_name='lbann_data.Reader.label_filename', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='validation_percent', full_name='lbann_data.Reader.validation_percent', index=7,
      number=9, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='absolute_sample_count', full_name='lbann_data.Reader.absolute_sample_count', index=8,
      number=11, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='first_n', full_name='lbann_data.Reader.first_n', index=9,
      number=200, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='percent_of_data_to_use', full_name='lbann_data.Reader.percent_of_data_to_use', index=10,
      number=12, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gan_labelling', full_name='lbann_data.Reader.gan_labelling', index=11,
      number=201, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gan_label_value', full_name='lbann_data.Reader.gan_label_value', index=12,
      number=202, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_preprocessor', full_name='lbann_data.Reader.image_preprocessor', index=13,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='jag_scalar_keys', full_name='lbann_data.Reader.jag_scalar_keys', index=14,
      number=95, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='jag_input_keys', full_name='lbann_data.Reader.jag_input_keys', index=15,
      number=96, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='independent', full_name='lbann_data.Reader.independent', index=16,
      number=97, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dependent', full_name='lbann_data.Reader.dependent', index=17,
      number=98, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_labels', full_name='lbann_data.Reader.num_labels', index=18,
      number=99, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_samples', full_name='lbann_data.Reader.num_samples', index=19,
      number=100, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_features', full_name='lbann_data.Reader.num_features', index=20,
      number=101, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='separator', full_name='lbann_data.Reader.separator', index=21,
      number=102, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='skip_cols', full_name='lbann_data.Reader.skip_cols', index=22,
      number=103, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='skip_rows', full_name='lbann_data.Reader.skip_rows', index=23,
      number=104, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_header', full_name='lbann_data.Reader.has_header', index=24,
      number=105, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label_col', full_name='lbann_data.Reader.label_col', index=25,
      number=106, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response_col', full_name='lbann_data.Reader.response_col', index=26,
      number=107, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_labels', full_name='lbann_data.Reader.disable_labels', index=27,
      number=108, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_responses', full_name='lbann_data.Reader.disable_responses', index=28,
      number=109, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='format', full_name='lbann_data.Reader.format', index=29,
      number=110, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_file_pattern', full_name='lbann_data.Reader.data_file_pattern', index=30,
      number=111, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_neighbors', full_name='lbann_data.Reader.num_neighbors', index=31,
      number=112, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_neighborhood', full_name='lbann_data.Reader.max_neighborhood', index=32,
      number=113, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_image_srcs', full_name='lbann_data.Reader.num_image_srcs', index=33,
      number=114, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=293,
  serialized_end=1098,
)


_IMAGEPREPROCESSOR_CROPPER = _descriptor.Descriptor(
  name='Cropper',
  full_name='lbann_data.ImagePreprocessor.Cropper',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Cropper.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Cropper.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_randomly', full_name='lbann_data.ImagePreprocessor.Cropper.crop_randomly', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_width', full_name='lbann_data.ImagePreprocessor.Cropper.crop_width', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_height', full_name='lbann_data.ImagePreprocessor.Cropper.crop_height', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resized_width', full_name='lbann_data.ImagePreprocessor.Cropper.resized_width', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resized_height', full_name='lbann_data.ImagePreprocessor.Cropper.resized_height', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adaptive_interpolation', full_name='lbann_data.ImagePreprocessor.Cropper.adaptive_interpolation', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2162,
  serialized_end=2345,
)

_IMAGEPREPROCESSOR_AUGMENTER = _descriptor.Descriptor(
  name='Augmenter',
  full_name='lbann_data.ImagePreprocessor.Augmenter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Augmenter.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Augmenter.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='horizontal_flip', full_name='lbann_data.ImagePreprocessor.Augmenter.horizontal_flip', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vertical_flip', full_name='lbann_data.ImagePreprocessor.Augmenter.vertical_flip', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rotation', full_name='lbann_data.ImagePreprocessor.Augmenter.rotation', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='horizontal_shift', full_name='lbann_data.ImagePreprocessor.Augmenter.horizontal_shift', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vertical_shift', full_name='lbann_data.ImagePreprocessor.Augmenter.vertical_shift', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shear_range', full_name='lbann_data.ImagePreprocessor.Augmenter.shear_range', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2348,
  serialized_end=2527,
)

_IMAGEPREPROCESSOR_DECOLORIZER = _descriptor.Descriptor(
  name='Decolorizer',
  full_name='lbann_data.ImagePreprocessor.Decolorizer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Decolorizer.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Decolorizer.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pick_1ch', full_name='lbann_data.ImagePreprocessor.Decolorizer.pick_1ch', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2529,
  serialized_end=2591,
)

_IMAGEPREPROCESSOR_COLORIZER = _descriptor.Descriptor(
  name='Colorizer',
  full_name='lbann_data.ImagePreprocessor.Colorizer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Colorizer.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Colorizer.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2593,
  serialized_end=2635,
)

_IMAGEPREPROCESSOR_NORMALIZER = _descriptor.Descriptor(
  name='Normalizer',
  full_name='lbann_data.ImagePreprocessor.Normalizer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Normalizer.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Normalizer.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='lbann_data.ImagePreprocessor.Normalizer.scale', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subtract_mean', full_name='lbann_data.ImagePreprocessor.Normalizer.subtract_mean', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unit_variance', full_name='lbann_data.ImagePreprocessor.Normalizer.unit_variance', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='z_score', full_name='lbann_data.ImagePreprocessor.Normalizer.z_score', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2637,
  serialized_end=2758,
)

_IMAGEPREPROCESSOR_SUBTRACTOR = _descriptor.Descriptor(
  name='Subtractor',
  full_name='lbann_data.ImagePreprocessor.Subtractor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Subtractor.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Subtractor.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_to_sub', full_name='lbann_data.ImagePreprocessor.Subtractor.image_to_sub', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_to_div', full_name='lbann_data.ImagePreprocessor.Subtractor.image_to_div', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel_mean', full_name='lbann_data.ImagePreprocessor.Subtractor.channel_mean', index=4,
      number=5, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='channel_stddev', full_name='lbann_data.ImagePreprocessor.Subtractor.channel_stddev', index=5,
      number=6, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2761,
  serialized_end=2902,
)

_IMAGEPREPROCESSOR_PATCHEXTRACTOR = _descriptor.Descriptor(
  name='PatchExtractor',
  full_name='lbann_data.ImagePreprocessor.PatchExtractor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.PatchExtractor.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.PatchExtractor.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patch_width', full_name='lbann_data.ImagePreprocessor.PatchExtractor.patch_width', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patch_height', full_name='lbann_data.ImagePreprocessor.PatchExtractor.patch_height', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patch_gap', full_name='lbann_data.ImagePreprocessor.PatchExtractor.patch_gap', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patch_jitter', full_name='lbann_data.ImagePreprocessor.PatchExtractor.patch_jitter', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='centering_mode', full_name='lbann_data.ImagePreprocessor.PatchExtractor.centering_mode', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ca_correction_mode', full_name='lbann_data.ImagePreprocessor.PatchExtractor.ca_correction_mode', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2905,
  serialized_end=3088,
)

_IMAGEPREPROCESSOR_NOISER = _descriptor.Descriptor(
  name='Noiser',
  full_name='lbann_data.ImagePreprocessor.Noiser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.Noiser.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.Noiser.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='factor', full_name='lbann_data.ImagePreprocessor.Noiser.factor', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3090,
  serialized_end=3145,
)

_IMAGEPREPROCESSOR = _descriptor.Descriptor(
  name='ImagePreprocessor',
  full_name='lbann_data.ImagePreprocessor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.ImagePreprocessor.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.ImagePreprocessor.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='raw_width', full_name='lbann_data.ImagePreprocessor.raw_width', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='raw_height', full_name='lbann_data.ImagePreprocessor.raw_height', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cropper', full_name='lbann_data.ImagePreprocessor.cropper', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='augmenter', full_name='lbann_data.ImagePreprocessor.augmenter', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='decolorizer', full_name='lbann_data.ImagePreprocessor.decolorizer', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='colorizer', full_name='lbann_data.ImagePreprocessor.colorizer', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subtractor', full_name='lbann_data.ImagePreprocessor.subtractor', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='normalizer', full_name='lbann_data.ImagePreprocessor.normalizer', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='noiser', full_name='lbann_data.ImagePreprocessor.noiser', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patch_extractor', full_name='lbann_data.ImagePreprocessor.patch_extractor', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='lbann_data.ImagePreprocessor.scale', index=12,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subtract_mean', full_name='lbann_data.ImagePreprocessor.subtract_mean', index=13,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unit_variance', full_name='lbann_data.ImagePreprocessor.unit_variance', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='z_score', full_name='lbann_data.ImagePreprocessor.z_score', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='horizontal_flip', full_name='lbann_data.ImagePreprocessor.horizontal_flip', index=16,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vertical_flip', full_name='lbann_data.ImagePreprocessor.vertical_flip', index=17,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rotation', full_name='lbann_data.ImagePreprocessor.rotation', index=18,
      number=19, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='horizontal_shift', full_name='lbann_data.ImagePreprocessor.horizontal_shift', index=19,
      number=20, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vertical_shift', full_name='lbann_data.ImagePreprocessor.vertical_shift', index=20,
      number=21, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shear_range', full_name='lbann_data.ImagePreprocessor.shear_range', index=21,
      number=22, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_augmentation', full_name='lbann_data.ImagePreprocessor.disable_augmentation', index=22,
      number=23, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='noise_factor', full_name='lbann_data.ImagePreprocessor.noise_factor', index=23,
      number=24, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='no_colorize', full_name='lbann_data.ImagePreprocessor.no_colorize', index=24,
      number=25, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_first', full_name='lbann_data.ImagePreprocessor.crop_first', index=25,
      number=26, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_width', full_name='lbann_data.ImagePreprocessor.crop_width', index=26,
      number=27, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_height', full_name='lbann_data.ImagePreprocessor.crop_height', index=27,
      number=28, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop_randomly', full_name='lbann_data.ImagePreprocessor.crop_randomly', index=28,
      number=29, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resized_width', full_name='lbann_data.ImagePreprocessor.resized_width', index=29,
      number=30, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resized_height', full_name='lbann_data.ImagePreprocessor.resized_height', index=30,
      number=31, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adaptive_interpolation', full_name='lbann_data.ImagePreprocessor.adaptive_interpolation', index=31,
      number=32, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='early_normalization', full_name='lbann_data.ImagePreprocessor.early_normalization', index=32,
      number=33, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_IMAGEPREPROCESSOR_CROPPER, _IMAGEPREPROCESSOR_AUGMENTER, _IMAGEPREPROCESSOR_DECOLORIZER, _IMAGEPREPROCESSOR_COLORIZER, _IMAGEPREPROCESSOR_NORMALIZER, _IMAGEPREPROCESSOR_SUBTRACTOR, _IMAGEPREPROCESSOR_PATCHEXTRACTOR, _IMAGEPREPROCESSOR_NOISER, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1101,
  serialized_end=3145,
)


_GENERICPREPROCESSOR_NORMALIZER = _descriptor.Descriptor(
  name='Normalizer',
  full_name='lbann_data.GenericPreprocessor.Normalizer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.GenericPreprocessor.Normalizer.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.GenericPreprocessor.Normalizer.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='lbann_data.GenericPreprocessor.Normalizer.scale', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subtract_mean', full_name='lbann_data.GenericPreprocessor.Normalizer.subtract_mean', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unit_variance', full_name='lbann_data.GenericPreprocessor.Normalizer.unit_variance', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='z_score', full_name='lbann_data.GenericPreprocessor.Normalizer.z_score', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2637,
  serialized_end=2758,
)

_GENERICPREPROCESSOR = _descriptor.Descriptor(
  name='GenericPreprocessor',
  full_name='lbann_data.GenericPreprocessor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.GenericPreprocessor.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable', full_name='lbann_data.GenericPreprocessor.disable', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='normalizer', full_name='lbann_data.GenericPreprocessor.normalizer', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GENERICPREPROCESSOR_NORMALIZER, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3148,
  serialized_end=3387,
)


_MODEL_RECURRENT = _descriptor.Descriptor(
  name='Recurrent',
  full_name='lbann_data.Model.Recurrent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='unroll_depth', full_name='lbann_data.Model.Recurrent.unroll_depth', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4026,
  serialized_end=4059,
)

_MODEL_SIAMESE = _descriptor.Descriptor(
  name='Siamese',
  full_name='lbann_data.Model.Siamese',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_heads', full_name='lbann_data.Model.Siamese.num_heads', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4061,
  serialized_end=4089,
)

_MODEL = _descriptor.Descriptor(
  name='Model',
  full_name='lbann_data.Model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.Model.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='objective_function', full_name='lbann_data.Model.objective_function', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metric', full_name='lbann_data.Model.metric', index=2,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_layout', full_name='lbann_data.Model.data_layout', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mini_batch_size', full_name='lbann_data.Model.mini_batch_size', index=4,
      number=12, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_epochs', full_name='lbann_data.Model.num_epochs', index=5,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='super_steps', full_name='lbann_data.Model.super_steps', index=6,
      number=121, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_batches', full_name='lbann_data.Model.num_batches', index=7,
      number=122, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block_size', full_name='lbann_data.Model.block_size', index=8,
      number=50, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='procs_per_model', full_name='lbann_data.Model.procs_per_model', index=9,
      number=51, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_gpus', full_name='lbann_data.Model.num_gpus', index=10,
      number=53, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='evaluation_frequency', full_name='lbann_data.Model.evaluation_frequency', index=11,
      number=54, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_parallel_readers', full_name='lbann_data.Model.num_parallel_readers', index=12,
      number=100, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disable_cuda', full_name='lbann_data.Model.disable_cuda', index=13,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer', full_name='lbann_data.Model.layer', index=14,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.Model.weights', index=15,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='callback', full_name='lbann_data.Model.callback', index=16,
      number=20, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='random_seed', full_name='lbann_data.Model.random_seed', index=17,
      number=30, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='random_init_models_differently', full_name='lbann_data.Model.random_init_models_differently', index=18,
      number=31, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recurrent', full_name='lbann_data.Model.recurrent', index=19,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='siamese', full_name='lbann_data.Model.siamese', index=20,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MODEL_RECURRENT, _MODEL_SIAMESE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3390,
  serialized_end=4089,
)


_OBJECTIVEFUNCTION = _descriptor.Descriptor(
  name='ObjectiveFunction',
  full_name='lbann_data.ObjectiveFunction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mean_squared_error', full_name='lbann_data.ObjectiveFunction.mean_squared_error', index=0,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean_absolute_deviation', full_name='lbann_data.ObjectiveFunction.mean_absolute_deviation', index=1,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean_absolute_error', full_name='lbann_data.ObjectiveFunction.mean_absolute_error', index=2,
      number=24, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cross_entropy', full_name='lbann_data.ObjectiveFunction.cross_entropy', index=3,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='binary_cross_entropy', full_name='lbann_data.ObjectiveFunction.binary_cross_entropy', index=4,
      number=13, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cross_entropy_with_uncertainty', full_name='lbann_data.ObjectiveFunction.cross_entropy_with_uncertainty', index=5,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='geom_negloglike', full_name='lbann_data.ObjectiveFunction.geom_negloglike', index=6,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poisson_negloglike', full_name='lbann_data.ObjectiveFunction.poisson_negloglike', index=7,
      number=16, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='polya_negloglike', full_name='lbann_data.ObjectiveFunction.polya_negloglike', index=8,
      number=17, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l1_weight_regularization', full_name='lbann_data.ObjectiveFunction.l1_weight_regularization', index=9,
      number=20, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_weight_regularization', full_name='lbann_data.ObjectiveFunction.l2_weight_regularization', index=10,
      number=21, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group_lasso_weight_regularization', full_name='lbann_data.ObjectiveFunction.group_lasso_weight_regularization', index=11,
      number=22, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kl_divergence', full_name='lbann_data.ObjectiveFunction.kl_divergence', index=12,
      number=23, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer_term', full_name='lbann_data.ObjectiveFunction.layer_term', index=13,
      number=25, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4092,
  serialized_end=4975,
)


_MEANSQUAREDERROR = _descriptor.Descriptor(
  name='MeanSquaredError',
  full_name='lbann_data.MeanSquaredError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.MeanSquaredError.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4977,
  serialized_end=5017,
)


_MEANABSOLUTEDEVIATION = _descriptor.Descriptor(
  name='MeanAbsoluteDeviation',
  full_name='lbann_data.MeanAbsoluteDeviation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.MeanAbsoluteDeviation.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5019,
  serialized_end=5064,
)


_MEANABSOLUTEERROR = _descriptor.Descriptor(
  name='MeanAbsoluteError',
  full_name='lbann_data.MeanAbsoluteError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.MeanAbsoluteError.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5066,
  serialized_end=5107,
)


_CROSSENTROPY = _descriptor.Descriptor(
  name='CrossEntropy',
  full_name='lbann_data.CrossEntropy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.CrossEntropy.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5109,
  serialized_end=5145,
)


_BINARYCROSSENTROPY = _descriptor.Descriptor(
  name='BinaryCrossEntropy',
  full_name='lbann_data.BinaryCrossEntropy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.BinaryCrossEntropy.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5147,
  serialized_end=5189,
)


_CROSSENTROPYWITHUNCERTAINTY = _descriptor.Descriptor(
  name='CrossEntropyWithUncertainty',
  full_name='lbann_data.CrossEntropyWithUncertainty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.CrossEntropyWithUncertainty.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5191,
  serialized_end=5242,
)


_GEOMNEGLOGLIKE = _descriptor.Descriptor(
  name='GeomNegLogLike',
  full_name='lbann_data.GeomNegLogLike',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.GeomNegLogLike.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5244,
  serialized_end=5282,
)


_POISSONNEGLOGLIKE = _descriptor.Descriptor(
  name='PoissonNegLogLike',
  full_name='lbann_data.PoissonNegLogLike',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.PoissonNegLogLike.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5284,
  serialized_end=5325,
)


_POLYANEGLOGLIKE = _descriptor.Descriptor(
  name='PolyaNegLogLike',
  full_name='lbann_data.PolyaNegLogLike',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.PolyaNegLogLike.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5327,
  serialized_end=5366,
)


_L1WEIGHTREGULARIZATION = _descriptor.Descriptor(
  name='L1WeightRegularization',
  full_name='lbann_data.L1WeightRegularization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.L1WeightRegularization.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5368,
  serialized_end=5414,
)


_L2WEIGHTREGULARIZATION = _descriptor.Descriptor(
  name='L2WeightRegularization',
  full_name='lbann_data.L2WeightRegularization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.L2WeightRegularization.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5416,
  serialized_end=5462,
)


_GROUPLASSOWEIGHTREGULARIZATION = _descriptor.Descriptor(
  name='GroupLassoWeightRegularization',
  full_name='lbann_data.GroupLassoWeightRegularization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.GroupLassoWeightRegularization.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5464,
  serialized_end=5518,
)


_KLDIVERGENCE = _descriptor.Descriptor(
  name='KLDivergence',
  full_name='lbann_data.KLDivergence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='layer1', full_name='lbann_data.KLDivergence.layer1', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer2', full_name='lbann_data.KLDivergence.layer2', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5520,
  serialized_end=5566,
)


_LAYERTERM = _descriptor.Descriptor(
  name='LayerTerm',
  full_name='lbann_data.LayerTerm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scale_factor', full_name='lbann_data.LayerTerm.scale_factor', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer', full_name='lbann_data.LayerTerm.layer', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5568,
  serialized_end=5616,
)


_METRIC = _descriptor.Descriptor(
  name='Metric',
  full_name='lbann_data.Metric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='categorical_accuracy', full_name='lbann_data.Metric.categorical_accuracy', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='top_k_categorical_accuracy', full_name='lbann_data.Metric.top_k_categorical_accuracy', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean_squared_error', full_name='lbann_data.Metric.mean_squared_error', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean_absolute_deviation', full_name='lbann_data.Metric.mean_absolute_deviation', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean_absolute_error', full_name='lbann_data.Metric.mean_absolute_error', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pearson_correlation', full_name='lbann_data.Metric.pearson_correlation', index=5,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='r2', full_name='lbann_data.Metric.r2', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolean_accuracy', full_name='lbann_data.Metric.boolean_accuracy', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolean_false_positives', full_name='lbann_data.Metric.boolean_false_positives', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolean_false_negatives', full_name='lbann_data.Metric.boolean_false_negatives', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer_metric', full_name='lbann_data.Metric.layer_metric', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5619,
  serialized_end=6276,
)


_CATEGORICALACCURACY = _descriptor.Descriptor(
  name='CategoricalAccuracy',
  full_name='lbann_data.CategoricalAccuracy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6278,
  serialized_end=6299,
)


_TOPKCATEGORICALACCURACY = _descriptor.Descriptor(
  name='TopKCategoricalAccuracy',
  full_name='lbann_data.TopKCategoricalAccuracy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='top_k', full_name='lbann_data.TopKCategoricalAccuracy.top_k', index=0,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6301,
  serialized_end=6341,
)


_PEARSONCORRELATION = _descriptor.Descriptor(
  name='PearsonCorrelation',
  full_name='lbann_data.PearsonCorrelation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6343,
  serialized_end=6363,
)


_R2 = _descriptor.Descriptor(
  name='R2',
  full_name='lbann_data.R2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6365,
  serialized_end=6369,
)


_BOOLEANACCURACY = _descriptor.Descriptor(
  name='BooleanAccuracy',
  full_name='lbann_data.BooleanAccuracy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6371,
  serialized_end=6388,
)


_BOOLEANFALSEPOSITIVES = _descriptor.Descriptor(
  name='BooleanFalsePositives',
  full_name='lbann_data.BooleanFalsePositives',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6390,
  serialized_end=6413,
)


_BOOLEANFALSENEGATIVES = _descriptor.Descriptor(
  name='BooleanFalseNegatives',
  full_name='lbann_data.BooleanFalseNegatives',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6415,
  serialized_end=6438,
)


_LAYERMETRIC = _descriptor.Descriptor(
  name='LayerMetric',
  full_name='lbann_data.LayerMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='unit', full_name='lbann_data.LayerMetric.unit', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer', full_name='lbann_data.LayerMetric.layer', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6440,
  serialized_end=6482,
)


_OPTIMIZER = _descriptor.Descriptor(
  name='Optimizer',
  full_name='lbann_data.Optimizer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='adagrad', full_name='lbann_data.Optimizer.adagrad', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rmsprop', full_name='lbann_data.Optimizer.rmsprop', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adam', full_name='lbann_data.Optimizer.adam', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hypergradient_adam', full_name='lbann_data.Optimizer.hypergradient_adam', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sgd', full_name='lbann_data.Optimizer.sgd', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6485,
  serialized_end=6693,
)


_ADAGRAD = _descriptor.Descriptor(
  name='Adagrad',
  full_name='lbann_data.Adagrad',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='learn_rate', full_name='lbann_data.Adagrad.learn_rate', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eps', full_name='lbann_data.Adagrad.eps', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6695,
  serialized_end=6737,
)


_ADAM = _descriptor.Descriptor(
  name='Adam',
  full_name='lbann_data.Adam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='learn_rate', full_name='lbann_data.Adam.learn_rate', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='beta1', full_name='lbann_data.Adam.beta1', index=1,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='beta2', full_name='lbann_data.Adam.beta2', index=2,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eps', full_name='lbann_data.Adam.eps', index=3,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6739,
  serialized_end=6808,
)


_HYPERGRADIENTADAM = _descriptor.Descriptor(
  name='HypergradientAdam',
  full_name='lbann_data.HypergradientAdam',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='init_learning_rate', full_name='lbann_data.HypergradientAdam.init_learning_rate', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hyper_learning_rate', full_name='lbann_data.HypergradientAdam.hyper_learning_rate', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='beta1', full_name='lbann_data.HypergradientAdam.beta1', index=2,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='beta2', full_name='lbann_data.HypergradientAdam.beta2', index=3,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eps', full_name='lbann_data.HypergradientAdam.eps', index=4,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6810,
  serialized_end=6929,
)


_RMSPROP = _descriptor.Descriptor(
  name='Rmsprop',
  full_name='lbann_data.Rmsprop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='learn_rate', full_name='lbann_data.Rmsprop.learn_rate', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='decay_rate', full_name='lbann_data.Rmsprop.decay_rate', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eps', full_name='lbann_data.Rmsprop.eps', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6931,
  serialized_end=6993,
)


_SGD = _descriptor.Descriptor(
  name='Sgd',
  full_name='lbann_data.Sgd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='learn_rate', full_name='lbann_data.Sgd.learn_rate', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='momentum', full_name='lbann_data.Sgd.momentum', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='decay_rate', full_name='lbann_data.Sgd.decay_rate', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nesterov', full_name='lbann_data.Sgd.nesterov', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6995,
  serialized_end=7076,
)


_CALLBACK = _descriptor.Descriptor(
  name='Callback',
  full_name='lbann_data.Callback',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='print', full_name='lbann_data.Callback.print', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timer', full_name='lbann_data.Callback.timer', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='summary', full_name='lbann_data.Callback.summary', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dump_weights', full_name='lbann_data.Callback.dump_weights', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dump_activations', full_name='lbann_data.Callback.dump_activations', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dump_gradients', full_name='lbann_data.Callback.dump_gradients', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dump_mb_indices', full_name='lbann_data.Callback.dump_mb_indices', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disp_io_stats', full_name='lbann_data.Callback.disp_io_stats', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='imcomm', full_name='lbann_data.Callback.imcomm', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='save_images', full_name='lbann_data.Callback.save_images', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='debug', full_name='lbann_data.Callback.debug', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='adaptive_learning_rate', full_name='lbann_data.Callback.adaptive_learning_rate', index=11,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='step_learning_rate', full_name='lbann_data.Callback.step_learning_rate', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='custom_learning_rate', full_name='lbann_data.Callback.custom_learning_rate', index=13,
      number=14, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check_small', full_name='lbann_data.Callback.check_small', index=14,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check_nan', full_name='lbann_data.Callback.check_nan', index=15,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check_dataset', full_name='lbann_data.Callback.check_dataset', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hang', full_name='lbann_data.Callback.hang', index=17,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drop_fixed_learning_rate', full_name='lbann_data.Callback.drop_fixed_learning_rate', index=18,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linear_growth_learning_rate', full_name='lbann_data.Callback.linear_growth_learning_rate', index=19,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='profiler', full_name='lbann_data.Callback.profiler', index=20,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='step_minibatch', full_name='lbann_data.Callback.step_minibatch', index=21,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gradient_check', full_name='lbann_data.Callback.gradient_check', index=22,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ltfb', full_name='lbann_data.Callback.ltfb', index=23,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='debug_io', full_name='lbann_data.Callback.debug_io', index=24,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='minibatch_schedule', full_name='lbann_data.Callback.minibatch_schedule', index=25,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optimizerwise_adaptive_learning_rate', full_name='lbann_data.Callback.optimizerwise_adaptive_learning_rate', index=26,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='checkpoint', full_name='lbann_data.Callback.checkpoint', index=27,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='save_model', full_name='lbann_data.Callback.save_model', index=28,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poly_learning_rate', full_name='lbann_data.Callback.poly_learning_rate', index=29,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='replace_weights', full_name='lbann_data.Callback.replace_weights', index=30,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7079,
  serialized_end=8871,
)


_CALLBACKLTFB = _descriptor.Descriptor(
  name='CallbackLTFB',
  full_name='lbann_data.CallbackLTFB',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='round_size', full_name='lbann_data.CallbackLTFB.round_size', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8873,
  serialized_end=8907,
)


_CALLBACKSTEPLEARNINGRATE = _descriptor.Descriptor(
  name='CallbackStepLearningRate',
  full_name='lbann_data.CallbackStepLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.CallbackStepLearningRate.weights', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='step', full_name='lbann_data.CallbackStepLearningRate.step', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amt', full_name='lbann_data.CallbackStepLearningRate.amt', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8909,
  serialized_end=8979,
)


_CALLBACKCUSTOMLEARNINGRATE = _descriptor.Descriptor(
  name='CallbackCustomLearningRate',
  full_name='lbann_data.CallbackCustomLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8981,
  serialized_end=9009,
)


_CALLBACKADAPTIVELEARNINGRATE = _descriptor.Descriptor(
  name='CallbackAdaptiveLearningRate',
  full_name='lbann_data.CallbackAdaptiveLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.CallbackAdaptiveLearningRate.weights', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='patience', full_name='lbann_data.CallbackAdaptiveLearningRate.patience', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amt', full_name='lbann_data.CallbackAdaptiveLearningRate.amt', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9011,
  serialized_end=9089,
)


_CALLBACKSAVEIMAGES = _descriptor.Descriptor(
  name='CallbackSaveImages',
  full_name='lbann_data.CallbackSaveImages',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_dir', full_name='lbann_data.CallbackSaveImages.image_dir', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer_names', full_name='lbann_data.CallbackSaveImages.layer_names', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extension', full_name='lbann_data.CallbackSaveImages.extension', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9091,
  serialized_end=9170,
)


_CALLBACKPRINT = _descriptor.Descriptor(
  name='CallbackPrint',
  full_name='lbann_data.CallbackPrint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interval', full_name='lbann_data.CallbackPrint.interval', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9172,
  serialized_end=9205,
)


_CALLBACKPROFILER = _descriptor.Descriptor(
  name='CallbackProfiler',
  full_name='lbann_data.CallbackProfiler',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9207,
  serialized_end=9225,
)


_CALLBACKTIMER = _descriptor.Descriptor(
  name='CallbackTimer',
  full_name='lbann_data.CallbackTimer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9227,
  serialized_end=9242,
)


_CALLBACKSUMMARY = _descriptor.Descriptor(
  name='CallbackSummary',
  full_name='lbann_data.CallbackSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dir', full_name='lbann_data.CallbackSummary.dir', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batch_interval', full_name='lbann_data.CallbackSummary.batch_interval', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mat_interval', full_name='lbann_data.CallbackSummary.mat_interval', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9244,
  serialized_end=9320,
)


_CALLBACKDUMPWEIGHTS = _descriptor.Descriptor(
  name='CallbackDumpWeights',
  full_name='lbann_data.CallbackDumpWeights',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='basename', full_name='lbann_data.CallbackDumpWeights.basename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9322,
  serialized_end=9361,
)


_CALLBACKDUMPACTIVATIONS = _descriptor.Descriptor(
  name='CallbackDumpActivations',
  full_name='lbann_data.CallbackDumpActivations',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='basename', full_name='lbann_data.CallbackDumpActivations.basename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='lbann_data.CallbackDumpActivations.interval', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer_names', full_name='lbann_data.CallbackDumpActivations.layer_names', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9363,
  serialized_end=9445,
)


_CALLBACKDUMPGRADIENTS = _descriptor.Descriptor(
  name='CallbackDumpGradients',
  full_name='lbann_data.CallbackDumpGradients',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='basename', full_name='lbann_data.CallbackDumpGradients.basename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='lbann_data.CallbackDumpGradients.interval', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9447,
  serialized_end=9506,
)


_CALLBACKDUMPMBINDICES = _descriptor.Descriptor(
  name='CallbackDumpMBIndices',
  full_name='lbann_data.CallbackDumpMBIndices',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='basename', full_name='lbann_data.CallbackDumpMBIndices.basename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interval', full_name='lbann_data.CallbackDumpMBIndices.interval', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9508,
  serialized_end=9567,
)


_CALLBACKDISPIOSTATS = _descriptor.Descriptor(
  name='CallbackDispIOStats',
  full_name='lbann_data.CallbackDispIOStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='layers', full_name='lbann_data.CallbackDispIOStats.layers', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9569,
  serialized_end=9606,
)


_CALLBACKIMCOMM = _descriptor.Descriptor(
  name='CallbackImComm',
  full_name='lbann_data.CallbackImComm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intermodel_comm_method', full_name='lbann_data.CallbackImComm.intermodel_comm_method', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='all_optimizers', full_name='lbann_data.CallbackImComm.all_optimizers', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9608,
  serialized_end=9680,
)


_CALLBACKDEBUG = _descriptor.Descriptor(
  name='CallbackDebug',
  full_name='lbann_data.CallbackDebug',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='phase', full_name='lbann_data.CallbackDebug.phase', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9682,
  serialized_end=9712,
)


_CALLBACKDEBUGIO = _descriptor.Descriptor(
  name='CallbackDebugIO',
  full_name='lbann_data.CallbackDebugIO',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='phase', full_name='lbann_data.CallbackDebugIO.phase', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lvl', full_name='lbann_data.CallbackDebugIO.lvl', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9714,
  serialized_end=9759,
)


_CALLBACKCHECKSMALL = _descriptor.Descriptor(
  name='CallbackCheckSmall',
  full_name='lbann_data.CallbackCheckSmall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9761,
  serialized_end=9781,
)


_CALLBACKCHECKNAN = _descriptor.Descriptor(
  name='CallbackCheckNaN',
  full_name='lbann_data.CallbackCheckNaN',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9783,
  serialized_end=9801,
)


_CALLBACKCHECKDATASET = _descriptor.Descriptor(
  name='CallbackCheckDataset',
  full_name='lbann_data.CallbackCheckDataset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9803,
  serialized_end=9825,
)


_CALLBACKHANG = _descriptor.Descriptor(
  name='CallbackHang',
  full_name='lbann_data.CallbackHang',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rank', full_name='lbann_data.CallbackHang.rank', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9827,
  serialized_end=9855,
)


_CALLBACKDROPFIXEDLEARNINGRATE = _descriptor.Descriptor(
  name='CallbackDropFixedLearningRate',
  full_name='lbann_data.CallbackDropFixedLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.CallbackDropFixedLearningRate.weights', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='drop_epoch', full_name='lbann_data.CallbackDropFixedLearningRate.drop_epoch', index=1,
      number=2, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amt', full_name='lbann_data.CallbackDropFixedLearningRate.amt', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9857,
  serialized_end=9938,
)


_CALLBACKLINEARGROWTHLEARNINGRATE = _descriptor.Descriptor(
  name='CallbackLinearGrowthLearningRate',
  full_name='lbann_data.CallbackLinearGrowthLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.CallbackLinearGrowthLearningRate.weights', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='lbann_data.CallbackLinearGrowthLearningRate.target', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_epochs', full_name='lbann_data.CallbackLinearGrowthLearningRate.num_epochs', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delay', full_name='lbann_data.CallbackLinearGrowthLearningRate.delay', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9940,
  serialized_end=10042,
)


_CALLBACKPOLYLEARNINGRATE = _descriptor.Descriptor(
  name='CallbackPolyLearningRate',
  full_name='lbann_data.CallbackPolyLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.CallbackPolyLearningRate.weights', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='power', full_name='lbann_data.CallbackPolyLearningRate.power', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_epochs', full_name='lbann_data.CallbackPolyLearningRate.num_epochs', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_iter', full_name='lbann_data.CallbackPolyLearningRate.max_iter', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10044,
  serialized_end=10140,
)


_CALLBACKSTEPMINIBATCH = _descriptor.Descriptor(
  name='CallbackStepMinibatch',
  full_name='lbann_data.CallbackStepMinibatch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='starting_mbsize', full_name='lbann_data.CallbackStepMinibatch.starting_mbsize', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='step', full_name='lbann_data.CallbackStepMinibatch.step', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ramp_time', full_name='lbann_data.CallbackStepMinibatch.ramp_time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10142,
  serialized_end=10223,
)


_MINIBATCHSCHEDULESTEP = _descriptor.Descriptor(
  name='MinibatchScheduleStep',
  full_name='lbann_data.MinibatchScheduleStep',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='epoch', full_name='lbann_data.MinibatchScheduleStep.epoch', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mbsize', full_name='lbann_data.MinibatchScheduleStep.mbsize', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lr', full_name='lbann_data.MinibatchScheduleStep.lr', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ramp_time', full_name='lbann_data.MinibatchScheduleStep.ramp_time', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10225,
  serialized_end=10310,
)


_CALLBACKOPTIMIZERWISEADAPTIVELEARNINGRATE = _descriptor.Descriptor(
  name='CallbackOptimizerwiseAdaptiveLearningRate',
  full_name='lbann_data.CallbackOptimizerwiseAdaptiveLearningRate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.CallbackOptimizerwiseAdaptiveLearningRate.weights', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='lbann_data.CallbackOptimizerwiseAdaptiveLearningRate.scale', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10312,
  serialized_end=10387,
)


_CALLBACKMINIBATCHSCHEDULE = _descriptor.Descriptor(
  name='CallbackMinibatchSchedule',
  full_name='lbann_data.CallbackMinibatchSchedule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='starting_mbsize', full_name='lbann_data.CallbackMinibatchSchedule.starting_mbsize', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='step', full_name='lbann_data.CallbackMinibatchSchedule.step', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10389,
  serialized_end=10490,
)


_CALLBACKGRADIENTCHECK = _descriptor.Descriptor(
  name='CallbackGradientCheck',
  full_name='lbann_data.CallbackGradientCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='step_size', full_name='lbann_data.CallbackGradientCheck.step_size', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='verbose', full_name='lbann_data.CallbackGradientCheck.verbose', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fail_on_error', full_name='lbann_data.CallbackGradientCheck.fail_on_error', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10492,
  serialized_end=10574,
)


_CALLBACKCHECKPOINT = _descriptor.Descriptor(
  name='CallbackCheckpoint',
  full_name='lbann_data.CallbackCheckpoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='checkpoint_dir', full_name='lbann_data.CallbackCheckpoint.checkpoint_dir', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='checkpoint_epochs', full_name='lbann_data.CallbackCheckpoint.checkpoint_epochs', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='checkpoint_steps', full_name='lbann_data.CallbackCheckpoint.checkpoint_steps', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='checkpoint_secs', full_name='lbann_data.CallbackCheckpoint.checkpoint_secs', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='per_rank_dir', full_name='lbann_data.CallbackCheckpoint.per_rank_dir', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ckpt_dist_epochs', full_name='lbann_data.CallbackCheckpoint.ckpt_dist_epochs', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ckpt_dist_steps', full_name='lbann_data.CallbackCheckpoint.ckpt_dist_steps', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10577,
  serialized_end=10772,
)


_CALLBACKSAVEMODEL = _descriptor.Descriptor(
  name='CallbackSaveModel',
  full_name='lbann_data.CallbackSaveModel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dir', full_name='lbann_data.CallbackSaveModel.dir', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extension', full_name='lbann_data.CallbackSaveModel.extension', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10774,
  serialized_end=10825,
)


_CALLBACKREPLACEWEIGHTS = _descriptor.Descriptor(
  name='CallbackReplaceWeights',
  full_name='lbann_data.CallbackReplaceWeights',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_layers', full_name='lbann_data.CallbackReplaceWeights.source_layers', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='destination_layers', full_name='lbann_data.CallbackReplaceWeights.destination_layers', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batch_interval', full_name='lbann_data.CallbackReplaceWeights.batch_interval', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10827,
  serialized_end=10926,
)


_WEIGHTS = _descriptor.Descriptor(
  name='Weights',
  full_name='lbann_data.Weights',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.Weights.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='optimizer', full_name='lbann_data.Weights.optimizer', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constant_initializer', full_name='lbann_data.Weights.constant_initializer', index=2,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uniform_initializer', full_name='lbann_data.Weights.uniform_initializer', index=3,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='normal_initializer', full_name='lbann_data.Weights.normal_initializer', index=4,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='glorot_normal_initializer', full_name='lbann_data.Weights.glorot_normal_initializer', index=5,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='glorot_uniform_initializer', full_name='lbann_data.Weights.glorot_uniform_initializer', index=6,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='he_normal_initializer', full_name='lbann_data.Weights.he_normal_initializer', index=7,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='he_uniform_initializer', full_name='lbann_data.Weights.he_uniform_initializer', index=8,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lecun_normal_initializer', full_name='lbann_data.Weights.lecun_normal_initializer', index=9,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lecun_uniform_initializer', full_name='lbann_data.Weights.lecun_uniform_initializer', index=10,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10929,
  serialized_end=11595,
)


_CONSTANTINITIALIZER = _descriptor.Descriptor(
  name='ConstantInitializer',
  full_name='lbann_data.ConstantInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='lbann_data.ConstantInitializer.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11597,
  serialized_end=11633,
)


_UNIFORMINITIALIZER = _descriptor.Descriptor(
  name='UniformInitializer',
  full_name='lbann_data.UniformInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='lbann_data.UniformInitializer.min', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='lbann_data.UniformInitializer.max', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11635,
  serialized_end=11681,
)


_NORMALINITIALIZER = _descriptor.Descriptor(
  name='NormalInitializer',
  full_name='lbann_data.NormalInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mean', full_name='lbann_data.NormalInitializer.mean', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='standard_deviation', full_name='lbann_data.NormalInitializer.standard_deviation', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11683,
  serialized_end=11744,
)


_GLOROTNORMALINITIALIZER = _descriptor.Descriptor(
  name='GlorotNormalInitializer',
  full_name='lbann_data.GlorotNormalInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11746,
  serialized_end=11771,
)


_GLOROTUNIFORMINITIALIZER = _descriptor.Descriptor(
  name='GlorotUniformInitializer',
  full_name='lbann_data.GlorotUniformInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11773,
  serialized_end=11799,
)


_HENORMALINITIALIZER = _descriptor.Descriptor(
  name='HeNormalInitializer',
  full_name='lbann_data.HeNormalInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11801,
  serialized_end=11822,
)


_HEUNIFORMINITIALIZER = _descriptor.Descriptor(
  name='HeUniformInitializer',
  full_name='lbann_data.HeUniformInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11824,
  serialized_end=11846,
)


_LECUNNORMALINITIALIZER = _descriptor.Descriptor(
  name='LeCunNormalInitializer',
  full_name='lbann_data.LeCunNormalInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11848,
  serialized_end=11872,
)


_LECUNUNIFORMINITIALIZER = _descriptor.Descriptor(
  name='LeCunUniformInitializer',
  full_name='lbann_data.LeCunUniformInitializer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11874,
  serialized_end=11899,
)


_WEIGHTSSHAPE = _descriptor.Descriptor(
  name='WeightsShape',
  full_name='lbann_data.WeightsShape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dim', full_name='lbann_data.WeightsShape.dim', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11901,
  serialized_end=11932,
)


_WEIGHTSDATA = _descriptor.Descriptor(
  name='WeightsData',
  full_name='lbann_data.WeightsData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shape', full_name='lbann_data.WeightsData.shape', index=0,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.WeightsData.name', index=1,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='height', full_name='lbann_data.WeightsData.height', index=2,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='width', full_name='lbann_data.WeightsData.width', index=3,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='lbann_data.WeightsData.data', index=4,
      number=4, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))),
    _descriptor.FieldDescriptor(
      name='imcomm', full_name='lbann_data.WeightsData.imcomm', index=5,
      number=55, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11935,
  serialized_end=12088,
)


_MOTIFDEFINITIONS = _descriptor.Descriptor(
  name='MotifDefinitions',
  full_name='lbann_data.MotifDefinitions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='motif', full_name='lbann_data.MotifDefinitions.motif', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12090,
  serialized_end=12142,
)


_MOTIF = _descriptor.Descriptor(
  name='Motif',
  full_name='lbann_data.Motif',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.Motif.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='layer', full_name='lbann_data.Motif.layer', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12144,
  serialized_end=12199,
)


_LAYER = _descriptor.Descriptor(
  name='Layer',
  full_name='lbann_data.Layer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='lbann_data.Layer.name', index=0,
      number=50, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='parents', full_name='lbann_data.Layer.parents', index=1,
      number=151, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='children', full_name='lbann_data.Layer.children', index=2,
      number=152, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_layout', full_name='lbann_data.Layer.data_layout', index=3,
      number=52, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='device_allocation', full_name='lbann_data.Layer.device_allocation', index=4,
      number=55, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weights', full_name='lbann_data.Layer.weights', index=5,
      number=54, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_neurons_from_data_reader', full_name='lbann_data.Layer.num_neurons_from_data_reader', index=6,
      number=53, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='freeze', full_name='lbann_data.Layer.freeze', index=7,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weights_data', full_name='lbann_data.Layer.weights_data', index=8,
      number=153, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='top', full_name='lbann_data.Layer.top', index=9,
      number=154, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bottom', full_name='lbann_data.Layer.bottom', index=10,
      number=155, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='lbann_data.Layer.type', index=11,
      number=156, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='motif_layer', full_name='lbann_data.Layer.motif_layer', index=12,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='input', full_name='lbann_data.Layer.input', index=13,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repeated_input', full_name='lbann_data.Layer.repeated_input', index=14,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reshape', full_name='lbann_data.Layer.reshape', index=15,
      number=306, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pooling', full_name='lbann_data.Layer.pooling', index=16,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='concatenation', full_name='lbann_data.Layer.concatenation', index=17,
      number=300, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slice', full_name='lbann_data.Layer.slice', index=18,
      number=301, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='split', full_name='lbann_data.Layer.split', index=19,
      number=302, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sum', full_name='lbann_data.Layer.sum', index=20,
      number=303, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unpooling', full_name='lbann_data.Layer.unpooling', index=21,
      number=304, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hadamard', full_name='lbann_data.Layer.hadamard', index=22,
      number=308, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constant', full_name='lbann_data.Layer.constant', index=23,
      number=309, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zero', full_name='lbann_data.Layer.zero', index=24,
      number=315, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reduction', full_name='lbann_data.Layer.reduction', index=25,
      number=310, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='evaluation', full_name='lbann_data.Layer.evaluation', index=26,
      number=311, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gaussian', full_name='lbann_data.Layer.gaussian', index=27,
      number=312, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bernoulli', full_name='lbann_data.Layer.bernoulli', index=28,
      number=313, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uniform', full_name='lbann_data.Layer.uniform', index=29,
      number=314, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='crop', full_name='lbann_data.Layer.crop', index=30,
      number=316, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='categorical_random', full_name='lbann_data.Layer.categorical_random', index=31,
      number=317, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='discrete_random', full_name='lbann_data.Layer.discrete_random', index=32,
      number=318, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stop_gradient', full_name='lbann_data.Layer.stop_gradient', index=33,
      number=319, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='lbann_data.Layer.max', index=34,
      number=320, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min', full_name='lbann_data.Layer.min', index=35,
      number=321, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fully_connected', full_name='lbann_data.Layer.fully_connected', index=36,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='convolution', full_name='lbann_data.Layer.convolution', index=37,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deconvolution', full_name='lbann_data.Layer.deconvolution', index=38,
      number=305, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='lbann_data.Layer.target', index=39,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reconstruction', full_name='lbann_data.Layer.reconstruction', index=40,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batch_normalization', full_name='lbann_data.Layer.batch_normalization', index=41,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='local_response_normalization', full_name='lbann_data.Layer.local_response_normalization', index=42,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dropout', full_name='lbann_data.Layer.dropout', index=43,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='selu_dropout', full_name='lbann_data.Layer.selu_dropout', index=44,
      number=229, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='softmax', full_name='lbann_data.Layer.softmax', index=45,
      number=200, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='elu', full_name='lbann_data.Layer.elu', index=46,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='identity', full_name='lbann_data.Layer.identity', index=47,
      number=31, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='leaky_relu', full_name='lbann_data.Layer.leaky_relu', index=48,
      number=32, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='relu', full_name='lbann_data.Layer.relu', index=49,
      number=33, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sigmoid', full_name='lbann_data.Layer.sigmoid', index=50,
      number=34, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='smooth_relu', full_name='lbann_data.Layer.smooth_relu', index=51,
      number=35, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='softplus', full_name='lbann_data.Layer.softplus', index=52,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='selu', full_name='lbann_data.Layer.selu', index=53,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tanh', full_name='lbann_data.Layer.tanh', index=54,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='atan', full_name='lbann_data.Layer.atan', index=55,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bent_identity', full_name='lbann_data.Layer.bent_identity', index=56,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exponential', full_name='lbann_data.Layer.exponential', index=57,
      number=41, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='swish', full_name='lbann_data.Layer.swish', index=58,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='power', full_name='lbann_data.Layer.power', index=59,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='abs', full_name='lbann_data.Layer.abs', index=60,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_loss', full_name='lbann_data.Layer.l2_loss', index=61,
      number=45, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log', full_name='lbann_data.Layer.log', index=62,
      number=46, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bce_with_logits', full_name='lbann_data.Layer.bce_with_logits', index=63,
      number=47, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12202,
  serialized_end=14671,
)


_MOTIFLAYER = _descriptor.Descriptor(
  name='MotifLayer',
  full_name='lbann_data.MotifLayer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='motif_id', full_name='lbann_data.MotifLayer.motif_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variable', full_name='lbann_data.MotifLayer.variable', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14673,
  serialized_end=14721,
)


_ELU = _descriptor.Descriptor(
  name='ELU',
  full_name='lbann_data.ELU',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alpha', full_name='lbann_data.ELU.alpha', index=0,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14723,
  serialized_end=14743,
)


_IDENTITY = _descriptor.Descriptor(
  name='Identity',
  full_name='lbann_data.Identity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14745,
  serialized_end=14755,
)


_LEAKYRELU = _descriptor.Descriptor(
  name='LeakyRelu',
  full_name='lbann_data.LeakyRelu',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='leak', full_name='lbann_data.LeakyRelu.leak', index=0,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14757,
  serialized_end=14782,
)


_RELU = _descriptor.Descriptor(
  name='Relu',
  full_name='lbann_data.Relu',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14784,
  serialized_end=14790,
)


_SIGMOID = _descriptor.Descriptor(
  name='Sigmoid',
  full_name='lbann_data.Sigmoid',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14792,
  serialized_end=14801,
)


_SMOOTHRELU = _descriptor.Descriptor(
  name='SmoothRelu',
  full_name='lbann_data.SmoothRelu',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14803,
  serialized_end=14815,
)


_SOFTPLUS = _descriptor.Descriptor(
  name='Softplus',
  full_name='lbann_data.Softplus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14817,
  serialized_end=14827,
)


_TANH = _descriptor.Descriptor(
  name='Tanh',
  full_name='lbann_data.Tanh',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14829,
  serialized_end=14835,
)


_ATAN = _descriptor.Descriptor(
  name='Atan',
  full_name='lbann_data.Atan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14837,
  serialized_end=14843,
)


_BENTIDENTITY = _descriptor.Descriptor(
  name='BentIdentity',
  full_name='lbann_data.BentIdentity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14845,
  serialized_end=14859,
)


_EXPONENTIAL = _descriptor.Descriptor(
  name='Exponential',
  full_name='lbann_data.Exponential',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14861,
  serialized_end=14874,
)


_SWISH = _descriptor.Descriptor(
  name='Swish',
  full_name='lbann_data.Swish',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14876,
  serialized_end=14883,
)


_SELU = _descriptor.Descriptor(
  name='Selu',
  full_name='lbann_data.Selu',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alpha', full_name='lbann_data.Selu.alpha', index=0,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='lbann_data.Selu.scale', index=1,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14885,
  serialized_end=14921,
)


_SOFTMAX = _descriptor.Descriptor(
  name='Softmax',
  full_name='lbann_data.Softmax',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14923,
  serialized_end=14932,
)


_POWER = _descriptor.Descriptor(
  name='Power',
  full_name='lbann_data.Power',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exponent', full_name='lbann_data.Power.exponent', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14934,
  serialized_end=14959,
)


_ABS = _descriptor.Descriptor(
  name='Abs',
  full_name='lbann_data.Abs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14961,
  serialized_end=14966,
)


_L2LOSS = _descriptor.Descriptor(
  name='L2Loss',
  full_name='lbann_data.L2Loss',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14968,
  serialized_end=14976,
)


_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='lbann_data.Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='base', full_name='lbann_data.Log.base', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14978,
  serialized_end=14997,
)


_SIGMOID_BINARY_CROSS_ENTROPY_WITH_LOGITS = _descriptor.Descriptor(
  name='Sigmoid_Binary_Cross_Entropy_With_Logits',
  full_name='lbann_data.Sigmoid_Binary_Cross_Entropy_With_Logits',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='true_label', full_name='lbann_data.Sigmoid_Binary_Cross_Entropy_With_Logits.true_label', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14999,
  serialized_end=15061,
)


_BATCHNORMALIZATION = _descriptor.Descriptor(
  name='BatchNormalization',
  full_name='lbann_data.BatchNormalization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='decay', full_name='lbann_data.BatchNormalization.decay', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale_init', full_name='lbann_data.BatchNormalization.scale_init', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bias_init', full_name='lbann_data.BatchNormalization.bias_init', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='epsilon', full_name='lbann_data.BatchNormalization.epsilon', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='global_stats', full_name='lbann_data.BatchNormalization.global_stats', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15063,
  serialized_end=15176,
)


_SELUDROPOUT = _descriptor.Descriptor(
  name='SeluDropout',
  full_name='lbann_data.SeluDropout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keep_prob', full_name='lbann_data.SeluDropout.keep_prob', index=0,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alpha', full_name='lbann_data.SeluDropout.alpha', index=1,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scale', full_name='lbann_data.SeluDropout.scale', index=2,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15178,
  serialized_end=15240,
)


_LOCALRESPONSENORMALIZATION = _descriptor.Descriptor(
  name='LocalResponseNormalization',
  full_name='lbann_data.LocalResponseNormalization',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='window_width', full_name='lbann_data.LocalResponseNormalization.window_width', index=0,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lrn_alpha', full_name='lbann_data.LocalResponseNormalization.lrn_alpha', index=1,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lrn_beta', full_name='lbann_data.LocalResponseNormalization.lrn_beta', index=2,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lrn_k', full_name='lbann_data.LocalResponseNormalization.lrn_k', index=3,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15242,
  serialized_end=15344,
)


_DROPOUT = _descriptor.Descriptor(
  name='Dropout',
  full_name='lbann_data.Dropout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keep_prob', full_name='lbann_data.Dropout.keep_prob', index=0,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15346,
  serialized_end=15374,
)


_INPUT = _descriptor.Descriptor(
  name='Input',
  full_name='lbann_data.Input',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_set_per_model', full_name='lbann_data.Input.data_set_per_model', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='io_buffer', full_name='lbann_data.Input.io_buffer', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='for_regression', full_name='lbann_data.Input.for_regression', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15376,
  serialized_end=15454,
)


_REPEATEDINPUT = _descriptor.Descriptor(
  name='RepeatedInput',
  full_name='lbann_data.RepeatedInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data_set_per_model', full_name='lbann_data.RepeatedInput.data_set_per_model', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='for_regression', full_name='lbann_data.RepeatedInput.for_regression', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_steps', full_name='lbann_data.RepeatedInput.num_steps', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15456,
  serialized_end=15542,
)


_RESHAPE = _descriptor.Descriptor(
  name='Reshape',
  full_name='lbann_data.Reshape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_dims', full_name='lbann_data.Reshape.num_dims', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dims', full_name='lbann_data.Reshape.dims', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reshape_to_flattened_conv_format', full_name='lbann_data.Reshape.reshape_to_flattened_conv_format', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15544,
  serialized_end=15627,
)


_POOLING = _descriptor.Descriptor(
  name='Pooling',
  full_name='lbann_data.Pooling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_dims', full_name='lbann_data.Pooling.num_dims', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_vectors', full_name='lbann_data.Pooling.has_vectors', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_dims', full_name='lbann_data.Pooling.pool_dims', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_pads', full_name='lbann_data.Pooling.pool_pads', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_strides', full_name='lbann_data.Pooling.pool_strides', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_dims_i', full_name='lbann_data.Pooling.pool_dims_i', index=5,
      number=10, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_pads_i', full_name='lbann_data.Pooling.pool_pads_i', index=6,
      number=11, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_strides_i', full_name='lbann_data.Pooling.pool_strides_i', index=7,
      number=12, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pool_mode', full_name='lbann_data.Pooling.pool_mode', index=8,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15630,
  serialized_end=15823,
)


_UNPOOLING = _descriptor.Descriptor(
  name='Unpooling',
  full_name='lbann_data.Unpooling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_dims', full_name='lbann_data.Unpooling.num_dims', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pooling_layer', full_name='lbann_data.Unpooling.pooling_layer', index=1,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15825,
  serialized_end=15877,
)


_CONCATENATION = _descriptor.Descriptor(
  name='Concatenation',
  full_name='lbann_data.Concatenation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parents', full_name='lbann_data.Concatenation.parents', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='concatenation_axis', full_name='lbann_data.Concatenation.concatenation_axis', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15879,
  serialized_end=15939,
)


_SLICE = _descriptor.Descriptor(
  name='Slice',
  full_name='lbann_data.Slice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='slice_axis', full_name='lbann_data.Slice.slice_axis', index=0,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slice_points', full_name='lbann_data.Slice.slice_points', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15941,
  serialized_end=15990,
)


_SPLIT = _descriptor.Descriptor(
  name='Split',
  full_name='lbann_data.Split',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=15992,
  serialized_end=15999,
)


_SUM = _descriptor.Descriptor(
  name='Sum',
  full_name='lbann_data.Sum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scaling_factors', full_name='lbann_data.Sum.scaling_factors', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16001,
  serialized_end=16031,
)


_HADAMARD = _descriptor.Descriptor(
  name='Hadamard',
  full_name='lbann_data.Hadamard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16033,
  serialized_end=16043,
)


_CONSTANT = _descriptor.Descriptor(
  name='Constant',
  full_name='lbann_data.Constant',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='lbann_data.Constant.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_neurons', full_name='lbann_data.Constant.num_neurons', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16045,
  serialized_end=16091,
)


_ZERO = _descriptor.Descriptor(
  name='Zero',
  full_name='lbann_data.Zero',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first_half', full_name='lbann_data.Zero.first_half', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='second_half', full_name='lbann_data.Zero.second_half', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16093,
  serialized_end=16140,
)


_REDUCTION = _descriptor.Descriptor(
  name='Reduction',
  full_name='lbann_data.Reduction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='lbann_data.Reduction.mode', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16142,
  serialized_end=16167,
)


_EVALUATION = _descriptor.Descriptor(
  name='Evaluation',
  full_name='lbann_data.Evaluation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16169,
  serialized_end=16181,
)


_GAUSSIAN = _descriptor.Descriptor(
  name='Gaussian',
  full_name='lbann_data.Gaussian',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mean', full_name='lbann_data.Gaussian.mean', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdev', full_name='lbann_data.Gaussian.stdev', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='neuron_dims', full_name='lbann_data.Gaussian.neuron_dims', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16183,
  serialized_end=16243,
)


_BERNOULLI = _descriptor.Descriptor(
  name='Bernoulli',
  full_name='lbann_data.Bernoulli',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prob', full_name='lbann_data.Bernoulli.prob', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='neuron_dims', full_name='lbann_data.Bernoulli.neuron_dims', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16245,
  serialized_end=16291,
)


_UNIFORM = _descriptor.Descriptor(
  name='Uniform',
  full_name='lbann_data.Uniform',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min', full_name='lbann_data.Uniform.min', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='lbann_data.Uniform.max', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='neuron_dims', full_name='lbann_data.Uniform.neuron_dims', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16293,
  serialized_end=16349,
)


_CROP = _descriptor.Descriptor(
  name='Crop',
  full_name='lbann_data.Crop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dims', full_name='lbann_data.Crop.dims', index=0,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16351,
  serialized_end=16371,
)


_CATEGORICALRANDOM = _descriptor.Descriptor(
  name='CategoricalRandom',
  full_name='lbann_data.CategoricalRandom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16373,
  serialized_end=16392,
)


_DISCRETERANDOM = _descriptor.Descriptor(
  name='DiscreteRandom',
  full_name='lbann_data.DiscreteRandom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='values', full_name='lbann_data.DiscreteRandom.values', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dims', full_name='lbann_data.DiscreteRandom.dims', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16394,
  serialized_end=16440,
)


_STOPGRADIENT = _descriptor.Descriptor(
  name='StopGradient',
  full_name='lbann_data.StopGradient',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16442,
  serialized_end=16456,
)


_MAX = _descriptor.Descriptor(
  name='Max',
  full_name='lbann_data.Max',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16458,
  serialized_end=16463,
)


_MIN = _descriptor.Descriptor(
  name='Min',
  full_name='lbann_data.Min',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16465,
  serialized_end=16470,
)


_FULLYCONNECTED = _descriptor.Descriptor(
  name='FullyConnected',
  full_name='lbann_data.FullyConnected',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_neurons', full_name='lbann_data.FullyConnected.num_neurons', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weight_initialization', full_name='lbann_data.FullyConnected.weight_initialization', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_bias', full_name='lbann_data.FullyConnected.has_bias', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bias_initial_value', full_name='lbann_data.FullyConnected.bias_initial_value', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_regularization_factor', full_name='lbann_data.FullyConnected.l2_regularization_factor', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group_lasso_regularization_factor', full_name='lbann_data.FullyConnected.group_lasso_regularization_factor', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transpose', full_name='lbann_data.FullyConnected.transpose', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_neurons_is_num_labels', full_name='lbann_data.FullyConnected.num_neurons_is_num_labels', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16473,
  serialized_end=16718,
)


_CONVOLUTION = _descriptor.Descriptor(
  name='Convolution',
  full_name='lbann_data.Convolution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_dims', full_name='lbann_data.Convolution.num_dims', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_output_channels', full_name='lbann_data.Convolution.num_output_channels', index=1,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_vectors', full_name='lbann_data.Convolution.has_vectors', index=2,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_dims', full_name='lbann_data.Convolution.conv_dims', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_pads', full_name='lbann_data.Convolution.conv_pads', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_strides', full_name='lbann_data.Convolution.conv_strides', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_dims_i', full_name='lbann_data.Convolution.conv_dims_i', index=6,
      number=50, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_pads_i', full_name='lbann_data.Convolution.conv_pads_i', index=7,
      number=60, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_strides_i', full_name='lbann_data.Convolution.conv_strides_i', index=8,
      number=70, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weight_initialization', full_name='lbann_data.Convolution.weight_initialization', index=9,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_bias', full_name='lbann_data.Convolution.has_bias', index=10,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bias_initial_value', full_name='lbann_data.Convolution.bias_initial_value', index=11,
      number=11, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_regularization_factor', full_name='lbann_data.Convolution.l2_regularization_factor', index=12,
      number=12, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16721,
  serialized_end=17039,
)


_DECONVOLUTION = _descriptor.Descriptor(
  name='Deconvolution',
  full_name='lbann_data.Deconvolution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_dims', full_name='lbann_data.Deconvolution.num_dims', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_output_channels', full_name='lbann_data.Deconvolution.num_output_channels', index=1,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_vectors', full_name='lbann_data.Deconvolution.has_vectors', index=2,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_dims', full_name='lbann_data.Deconvolution.conv_dims', index=3,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_pads', full_name='lbann_data.Deconvolution.conv_pads', index=4,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_strides', full_name='lbann_data.Deconvolution.conv_strides', index=5,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_dims_i', full_name='lbann_data.Deconvolution.conv_dims_i', index=6,
      number=50, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_pads_i', full_name='lbann_data.Deconvolution.conv_pads_i', index=7,
      number=60, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conv_strides_i', full_name='lbann_data.Deconvolution.conv_strides_i', index=8,
      number=70, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weight_initialization', full_name='lbann_data.Deconvolution.weight_initialization', index=9,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_bias', full_name='lbann_data.Deconvolution.has_bias', index=10,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bias_initial_value', full_name='lbann_data.Deconvolution.bias_initial_value', index=11,
      number=11, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='l2_regularization_factor', full_name='lbann_data.Deconvolution.l2_regularization_factor', index=12,
      number=12, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17042,
  serialized_end=17362,
)


_TARGET = _descriptor.Descriptor(
  name='Target',
  full_name='lbann_data.Target',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='paired_input_layer', full_name='lbann_data.Target.paired_input_layer', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shared_data_reader', full_name='lbann_data.Target.shared_data_reader', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='for_regression', full_name='lbann_data.Target.for_regression', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='io_buffer', full_name='lbann_data.Target.io_buffer', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17364,
  serialized_end=17471,
)


_TARGETRECONSTRUCTION = _descriptor.Descriptor(
  name='TargetReconstruction',
  full_name='lbann_data.TargetReconstruction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original_layer', full_name='lbann_data.TargetReconstruction.original_layer', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=17473,
  serialized_end=17519,
)

_LBANNPB.fields_by_name['data_reader'].message_type = _DATAREADER
_LBANNPB.fields_by_name['model'].message_type = _MODEL
_LBANNPB.fields_by_name['optimizer'].message_type = _OPTIMIZER
_LBANNPB.fields_by_name['motif_definitions'].message_type = _MOTIFDEFINITIONS
_DATAREADER.fields_by_name['reader'].message_type = _READER
_READER.fields_by_name['image_preprocessor'].message_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_CROPPER.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_AUGMENTER.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_DECOLORIZER.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_COLORIZER.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_NORMALIZER.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_SUBTRACTOR.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_PATCHEXTRACTOR.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR_NOISER.containing_type = _IMAGEPREPROCESSOR
_IMAGEPREPROCESSOR.fields_by_name['cropper'].message_type = _IMAGEPREPROCESSOR_CROPPER
_IMAGEPREPROCESSOR.fields_by_name['augmenter'].message_type = _IMAGEPREPROCESSOR_AUGMENTER
_IMAGEPREPROCESSOR.fields_by_name['decolorizer'].message_type = _IMAGEPREPROCESSOR_DECOLORIZER
_IMAGEPREPROCESSOR.fields_by_name['colorizer'].message_type = _IMAGEPREPROCESSOR_COLORIZER
_IMAGEPREPROCESSOR.fields_by_name['subtractor'].message_type = _IMAGEPREPROCESSOR_SUBTRACTOR
_IMAGEPREPROCESSOR.fields_by_name['normalizer'].message_type = _IMAGEPREPROCESSOR_NORMALIZER
_IMAGEPREPROCESSOR.fields_by_name['noiser'].message_type = _IMAGEPREPROCESSOR_NOISER
_IMAGEPREPROCESSOR.fields_by_name['patch_extractor'].message_type = _IMAGEPREPROCESSOR_PATCHEXTRACTOR
_GENERICPREPROCESSOR_NORMALIZER.containing_type = _GENERICPREPROCESSOR
_GENERICPREPROCESSOR.fields_by_name['normalizer'].message_type = _GENERICPREPROCESSOR_NORMALIZER
_MODEL_RECURRENT.containing_type = _MODEL
_MODEL_SIAMESE.containing_type = _MODEL
_MODEL.fields_by_name['objective_function'].message_type = _OBJECTIVEFUNCTION
_MODEL.fields_by_name['metric'].message_type = _METRIC
_MODEL.fields_by_name['layer'].message_type = _LAYER
_MODEL.fields_by_name['weights'].message_type = _WEIGHTS
_MODEL.fields_by_name['callback'].message_type = _CALLBACK
_MODEL.fields_by_name['recurrent'].message_type = _MODEL_RECURRENT
_MODEL.fields_by_name['siamese'].message_type = _MODEL_SIAMESE
_OBJECTIVEFUNCTION.fields_by_name['mean_squared_error'].message_type = _MEANSQUAREDERROR
_OBJECTIVEFUNCTION.fields_by_name['mean_absolute_deviation'].message_type = _MEANABSOLUTEDEVIATION
_OBJECTIVEFUNCTION.fields_by_name['mean_absolute_error'].message_type = _MEANABSOLUTEERROR
_OBJECTIVEFUNCTION.fields_by_name['cross_entropy'].message_type = _CROSSENTROPY
_OBJECTIVEFUNCTION.fields_by_name['binary_cross_entropy'].message_type = _BINARYCROSSENTROPY
_OBJECTIVEFUNCTION.fields_by_name['cross_entropy_with_uncertainty'].message_type = _CROSSENTROPYWITHUNCERTAINTY
_OBJECTIVEFUNCTION.fields_by_name['geom_negloglike'].message_type = _GEOMNEGLOGLIKE
_OBJECTIVEFUNCTION.fields_by_name['poisson_negloglike'].message_type = _POISSONNEGLOGLIKE
_OBJECTIVEFUNCTION.fields_by_name['polya_negloglike'].message_type = _POLYANEGLOGLIKE
_OBJECTIVEFUNCTION.fields_by_name['l1_weight_regularization'].message_type = _L1WEIGHTREGULARIZATION
_OBJECTIVEFUNCTION.fields_by_name['l2_weight_regularization'].message_type = _L2WEIGHTREGULARIZATION
_OBJECTIVEFUNCTION.fields_by_name['group_lasso_weight_regularization'].message_type = _GROUPLASSOWEIGHTREGULARIZATION
_OBJECTIVEFUNCTION.fields_by_name['kl_divergence'].message_type = _KLDIVERGENCE
_OBJECTIVEFUNCTION.fields_by_name['layer_term'].message_type = _LAYERTERM
_METRIC.fields_by_name['categorical_accuracy'].message_type = _CATEGORICALACCURACY
_METRIC.fields_by_name['top_k_categorical_accuracy'].message_type = _TOPKCATEGORICALACCURACY
_METRIC.fields_by_name['mean_squared_error'].message_type = _MEANSQUAREDERROR
_METRIC.fields_by_name['mean_absolute_deviation'].message_type = _MEANABSOLUTEDEVIATION
_METRIC.fields_by_name['mean_absolute_error'].message_type = _MEANABSOLUTEERROR
_METRIC.fields_by_name['pearson_correlation'].message_type = _PEARSONCORRELATION
_METRIC.fields_by_name['r2'].message_type = _R2
_METRIC.fields_by_name['boolean_accuracy'].message_type = _BOOLEANACCURACY
_METRIC.fields_by_name['boolean_false_positives'].message_type = _BOOLEANFALSEPOSITIVES
_METRIC.fields_by_name['boolean_false_negatives'].message_type = _BOOLEANFALSENEGATIVES
_METRIC.fields_by_name['layer_metric'].message_type = _LAYERMETRIC
_OPTIMIZER.fields_by_name['adagrad'].message_type = _ADAGRAD
_OPTIMIZER.fields_by_name['rmsprop'].message_type = _RMSPROP
_OPTIMIZER.fields_by_name['adam'].message_type = _ADAM
_OPTIMIZER.fields_by_name['hypergradient_adam'].message_type = _HYPERGRADIENTADAM
_OPTIMIZER.fields_by_name['sgd'].message_type = _SGD
_CALLBACK.fields_by_name['print'].message_type = _CALLBACKPRINT
_CALLBACK.fields_by_name['timer'].message_type = _CALLBACKTIMER
_CALLBACK.fields_by_name['summary'].message_type = _CALLBACKSUMMARY
_CALLBACK.fields_by_name['dump_weights'].message_type = _CALLBACKDUMPWEIGHTS
_CALLBACK.fields_by_name['dump_activations'].message_type = _CALLBACKDUMPACTIVATIONS
_CALLBACK.fields_by_name['dump_gradients'].message_type = _CALLBACKDUMPGRADIENTS
_CALLBACK.fields_by_name['dump_mb_indices'].message_type = _CALLBACKDUMPMBINDICES
_CALLBACK.fields_by_name['disp_io_stats'].message_type = _CALLBACKDISPIOSTATS
_CALLBACK.fields_by_name['imcomm'].message_type = _CALLBACKIMCOMM
_CALLBACK.fields_by_name['save_images'].message_type = _CALLBACKSAVEIMAGES
_CALLBACK.fields_by_name['debug'].message_type = _CALLBACKDEBUG
_CALLBACK.fields_by_name['adaptive_learning_rate'].message_type = _CALLBACKADAPTIVELEARNINGRATE
_CALLBACK.fields_by_name['step_learning_rate'].message_type = _CALLBACKSTEPLEARNINGRATE
_CALLBACK.fields_by_name['custom_learning_rate'].message_type = _CALLBACKCUSTOMLEARNINGRATE
_CALLBACK.fields_by_name['check_small'].message_type = _CALLBACKCHECKSMALL
_CALLBACK.fields_by_name['check_nan'].message_type = _CALLBACKCHECKNAN
_CALLBACK.fields_by_name['check_dataset'].message_type = _CALLBACKCHECKDATASET
_CALLBACK.fields_by_name['hang'].message_type = _CALLBACKHANG
_CALLBACK.fields_by_name['drop_fixed_learning_rate'].message_type = _CALLBACKDROPFIXEDLEARNINGRATE
_CALLBACK.fields_by_name['linear_growth_learning_rate'].message_type = _CALLBACKLINEARGROWTHLEARNINGRATE
_CALLBACK.fields_by_name['profiler'].message_type = _CALLBACKPROFILER
_CALLBACK.fields_by_name['step_minibatch'].message_type = _CALLBACKSTEPMINIBATCH
_CALLBACK.fields_by_name['gradient_check'].message_type = _CALLBACKGRADIENTCHECK
_CALLBACK.fields_by_name['ltfb'].message_type = _CALLBACKLTFB
_CALLBACK.fields_by_name['debug_io'].message_type = _CALLBACKDEBUGIO
_CALLBACK.fields_by_name['minibatch_schedule'].message_type = _CALLBACKMINIBATCHSCHEDULE
_CALLBACK.fields_by_name['optimizerwise_adaptive_learning_rate'].message_type = _CALLBACKOPTIMIZERWISEADAPTIVELEARNINGRATE
_CALLBACK.fields_by_name['checkpoint'].message_type = _CALLBACKCHECKPOINT
_CALLBACK.fields_by_name['save_model'].message_type = _CALLBACKSAVEMODEL
_CALLBACK.fields_by_name['poly_learning_rate'].message_type = _CALLBACKPOLYLEARNINGRATE
_CALLBACK.fields_by_name['replace_weights'].message_type = _CALLBACKREPLACEWEIGHTS
_CALLBACKMINIBATCHSCHEDULE.fields_by_name['step'].message_type = _MINIBATCHSCHEDULESTEP
_WEIGHTS.fields_by_name['optimizer'].message_type = _OPTIMIZER
_WEIGHTS.fields_by_name['constant_initializer'].message_type = _CONSTANTINITIALIZER
_WEIGHTS.fields_by_name['uniform_initializer'].message_type = _UNIFORMINITIALIZER
_WEIGHTS.fields_by_name['normal_initializer'].message_type = _NORMALINITIALIZER
_WEIGHTS.fields_by_name['glorot_normal_initializer'].message_type = _GLOROTNORMALINITIALIZER
_WEIGHTS.fields_by_name['glorot_uniform_initializer'].message_type = _GLOROTUNIFORMINITIALIZER
_WEIGHTS.fields_by_name['he_normal_initializer'].message_type = _HENORMALINITIALIZER
_WEIGHTS.fields_by_name['he_uniform_initializer'].message_type = _HEUNIFORMINITIALIZER
_WEIGHTS.fields_by_name['lecun_normal_initializer'].message_type = _LECUNNORMALINITIALIZER
_WEIGHTS.fields_by_name['lecun_uniform_initializer'].message_type = _LECUNUNIFORMINITIALIZER
_WEIGHTSDATA.fields_by_name['shape'].message_type = _WEIGHTSSHAPE
_WEIGHTSDATA.fields_by_name['imcomm'].enum_type = _IMCOMM
_MOTIFDEFINITIONS.fields_by_name['motif'].message_type = _MOTIF
_MOTIF.fields_by_name['layer'].message_type = _LAYER
_LAYER.fields_by_name['weights_data'].message_type = _WEIGHTSDATA
_LAYER.fields_by_name['motif_layer'].message_type = _MOTIFLAYER
_LAYER.fields_by_name['input'].message_type = _INPUT
_LAYER.fields_by_name['repeated_input'].message_type = _REPEATEDINPUT
_LAYER.fields_by_name['reshape'].message_type = _RESHAPE
_LAYER.fields_by_name['pooling'].message_type = _POOLING
_LAYER.fields_by_name['concatenation'].message_type = _CONCATENATION
_LAYER.fields_by_name['slice'].message_type = _SLICE
_LAYER.fields_by_name['split'].message_type = _SPLIT
_LAYER.fields_by_name['sum'].message_type = _SUM
_LAYER.fields_by_name['unpooling'].message_type = _UNPOOLING
_LAYER.fields_by_name['hadamard'].message_type = _HADAMARD
_LAYER.fields_by_name['constant'].message_type = _CONSTANT
_LAYER.fields_by_name['zero'].message_type = _ZERO
_LAYER.fields_by_name['reduction'].message_type = _REDUCTION
_LAYER.fields_by_name['evaluation'].message_type = _EVALUATION
_LAYER.fields_by_name['gaussian'].message_type = _GAUSSIAN
_LAYER.fields_by_name['bernoulli'].message_type = _BERNOULLI
_LAYER.fields_by_name['uniform'].message_type = _UNIFORM
_LAYER.fields_by_name['crop'].message_type = _CROP
_LAYER.fields_by_name['categorical_random'].message_type = _CATEGORICALRANDOM
_LAYER.fields_by_name['discrete_random'].message_type = _DISCRETERANDOM
_LAYER.fields_by_name['stop_gradient'].message_type = _STOPGRADIENT
_LAYER.fields_by_name['max'].message_type = _MAX
_LAYER.fields_by_name['min'].message_type = _MIN
_LAYER.fields_by_name['fully_connected'].message_type = _FULLYCONNECTED
_LAYER.fields_by_name['convolution'].message_type = _CONVOLUTION
_LAYER.fields_by_name['deconvolution'].message_type = _DECONVOLUTION
_LAYER.fields_by_name['target'].message_type = _TARGET
_LAYER.fields_by_name['reconstruction'].message_type = _TARGETRECONSTRUCTION
_LAYER.fields_by_name['batch_normalization'].message_type = _BATCHNORMALIZATION
_LAYER.fields_by_name['local_response_normalization'].message_type = _LOCALRESPONSENORMALIZATION
_LAYER.fields_by_name['dropout'].message_type = _DROPOUT
_LAYER.fields_by_name['selu_dropout'].message_type = _SELUDROPOUT
_LAYER.fields_by_name['softmax'].message_type = _SOFTMAX
_LAYER.fields_by_name['elu'].message_type = _ELU
_LAYER.fields_by_name['identity'].message_type = _IDENTITY
_LAYER.fields_by_name['leaky_relu'].message_type = _LEAKYRELU
_LAYER.fields_by_name['relu'].message_type = _RELU
_LAYER.fields_by_name['sigmoid'].message_type = _SIGMOID
_LAYER.fields_by_name['smooth_relu'].message_type = _SMOOTHRELU
_LAYER.fields_by_name['softplus'].message_type = _SOFTPLUS
_LAYER.fields_by_name['selu'].message_type = _SELU
_LAYER.fields_by_name['tanh'].message_type = _TANH
_LAYER.fields_by_name['atan'].message_type = _ATAN
_LAYER.fields_by_name['bent_identity'].message_type = _BENTIDENTITY
_LAYER.fields_by_name['exponential'].message_type = _EXPONENTIAL
_LAYER.fields_by_name['swish'].message_type = _SWISH
_LAYER.fields_by_name['power'].message_type = _POWER
_LAYER.fields_by_name['abs'].message_type = _ABS
_LAYER.fields_by_name['l2_loss'].message_type = _L2LOSS
_LAYER.fields_by_name['log'].message_type = _LOG
_LAYER.fields_by_name['bce_with_logits'].message_type = _SIGMOID_BINARY_CROSS_ENTROPY_WITH_LOGITS
DESCRIPTOR.message_types_by_name['LbannPB'] = _LBANNPB
DESCRIPTOR.message_types_by_name['DataReader'] = _DATAREADER
DESCRIPTOR.message_types_by_name['Reader'] = _READER
DESCRIPTOR.message_types_by_name['ImagePreprocessor'] = _IMAGEPREPROCESSOR
DESCRIPTOR.message_types_by_name['GenericPreprocessor'] = _GENERICPREPROCESSOR
DESCRIPTOR.message_types_by_name['Model'] = _MODEL
DESCRIPTOR.message_types_by_name['ObjectiveFunction'] = _OBJECTIVEFUNCTION
DESCRIPTOR.message_types_by_name['MeanSquaredError'] = _MEANSQUAREDERROR
DESCRIPTOR.message_types_by_name['MeanAbsoluteDeviation'] = _MEANABSOLUTEDEVIATION
DESCRIPTOR.message_types_by_name['MeanAbsoluteError'] = _MEANABSOLUTEERROR
DESCRIPTOR.message_types_by_name['CrossEntropy'] = _CROSSENTROPY
DESCRIPTOR.message_types_by_name['BinaryCrossEntropy'] = _BINARYCROSSENTROPY
DESCRIPTOR.message_types_by_name['CrossEntropyWithUncertainty'] = _CROSSENTROPYWITHUNCERTAINTY
DESCRIPTOR.message_types_by_name['GeomNegLogLike'] = _GEOMNEGLOGLIKE
DESCRIPTOR.message_types_by_name['PoissonNegLogLike'] = _POISSONNEGLOGLIKE
DESCRIPTOR.message_types_by_name['PolyaNegLogLike'] = _POLYANEGLOGLIKE
DESCRIPTOR.message_types_by_name['L1WeightRegularization'] = _L1WEIGHTREGULARIZATION
DESCRIPTOR.message_types_by_name['L2WeightRegularization'] = _L2WEIGHTREGULARIZATION
DESCRIPTOR.message_types_by_name['GroupLassoWeightRegularization'] = _GROUPLASSOWEIGHTREGULARIZATION
DESCRIPTOR.message_types_by_name['KLDivergence'] = _KLDIVERGENCE
DESCRIPTOR.message_types_by_name['LayerTerm'] = _LAYERTERM
DESCRIPTOR.message_types_by_name['Metric'] = _METRIC
DESCRIPTOR.message_types_by_name['CategoricalAccuracy'] = _CATEGORICALACCURACY
DESCRIPTOR.message_types_by_name['TopKCategoricalAccuracy'] = _TOPKCATEGORICALACCURACY
DESCRIPTOR.message_types_by_name['PearsonCorrelation'] = _PEARSONCORRELATION
DESCRIPTOR.message_types_by_name['R2'] = _R2
DESCRIPTOR.message_types_by_name['BooleanAccuracy'] = _BOOLEANACCURACY
DESCRIPTOR.message_types_by_name['BooleanFalsePositives'] = _BOOLEANFALSEPOSITIVES
DESCRIPTOR.message_types_by_name['BooleanFalseNegatives'] = _BOOLEANFALSENEGATIVES
DESCRIPTOR.message_types_by_name['LayerMetric'] = _LAYERMETRIC
DESCRIPTOR.message_types_by_name['Optimizer'] = _OPTIMIZER
DESCRIPTOR.message_types_by_name['Adagrad'] = _ADAGRAD
DESCRIPTOR.message_types_by_name['Adam'] = _ADAM
DESCRIPTOR.message_types_by_name['HypergradientAdam'] = _HYPERGRADIENTADAM
DESCRIPTOR.message_types_by_name['Rmsprop'] = _RMSPROP
DESCRIPTOR.message_types_by_name['Sgd'] = _SGD
DESCRIPTOR.message_types_by_name['Callback'] = _CALLBACK
DESCRIPTOR.message_types_by_name['CallbackLTFB'] = _CALLBACKLTFB
DESCRIPTOR.message_types_by_name['CallbackStepLearningRate'] = _CALLBACKSTEPLEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackCustomLearningRate'] = _CALLBACKCUSTOMLEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackAdaptiveLearningRate'] = _CALLBACKADAPTIVELEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackSaveImages'] = _CALLBACKSAVEIMAGES
DESCRIPTOR.message_types_by_name['CallbackPrint'] = _CALLBACKPRINT
DESCRIPTOR.message_types_by_name['CallbackProfiler'] = _CALLBACKPROFILER
DESCRIPTOR.message_types_by_name['CallbackTimer'] = _CALLBACKTIMER
DESCRIPTOR.message_types_by_name['CallbackSummary'] = _CALLBACKSUMMARY
DESCRIPTOR.message_types_by_name['CallbackDumpWeights'] = _CALLBACKDUMPWEIGHTS
DESCRIPTOR.message_types_by_name['CallbackDumpActivations'] = _CALLBACKDUMPACTIVATIONS
DESCRIPTOR.message_types_by_name['CallbackDumpGradients'] = _CALLBACKDUMPGRADIENTS
DESCRIPTOR.message_types_by_name['CallbackDumpMBIndices'] = _CALLBACKDUMPMBINDICES
DESCRIPTOR.message_types_by_name['CallbackDispIOStats'] = _CALLBACKDISPIOSTATS
DESCRIPTOR.message_types_by_name['CallbackImComm'] = _CALLBACKIMCOMM
DESCRIPTOR.message_types_by_name['CallbackDebug'] = _CALLBACKDEBUG
DESCRIPTOR.message_types_by_name['CallbackDebugIO'] = _CALLBACKDEBUGIO
DESCRIPTOR.message_types_by_name['CallbackCheckSmall'] = _CALLBACKCHECKSMALL
DESCRIPTOR.message_types_by_name['CallbackCheckNaN'] = _CALLBACKCHECKNAN
DESCRIPTOR.message_types_by_name['CallbackCheckDataset'] = _CALLBACKCHECKDATASET
DESCRIPTOR.message_types_by_name['CallbackHang'] = _CALLBACKHANG
DESCRIPTOR.message_types_by_name['CallbackDropFixedLearningRate'] = _CALLBACKDROPFIXEDLEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackLinearGrowthLearningRate'] = _CALLBACKLINEARGROWTHLEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackPolyLearningRate'] = _CALLBACKPOLYLEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackStepMinibatch'] = _CALLBACKSTEPMINIBATCH
DESCRIPTOR.message_types_by_name['MinibatchScheduleStep'] = _MINIBATCHSCHEDULESTEP
DESCRIPTOR.message_types_by_name['CallbackOptimizerwiseAdaptiveLearningRate'] = _CALLBACKOPTIMIZERWISEADAPTIVELEARNINGRATE
DESCRIPTOR.message_types_by_name['CallbackMinibatchSchedule'] = _CALLBACKMINIBATCHSCHEDULE
DESCRIPTOR.message_types_by_name['CallbackGradientCheck'] = _CALLBACKGRADIENTCHECK
DESCRIPTOR.message_types_by_name['CallbackCheckpoint'] = _CALLBACKCHECKPOINT
DESCRIPTOR.message_types_by_name['CallbackSaveModel'] = _CALLBACKSAVEMODEL
DESCRIPTOR.message_types_by_name['CallbackReplaceWeights'] = _CALLBACKREPLACEWEIGHTS
DESCRIPTOR.message_types_by_name['Weights'] = _WEIGHTS
DESCRIPTOR.message_types_by_name['ConstantInitializer'] = _CONSTANTINITIALIZER
DESCRIPTOR.message_types_by_name['UniformInitializer'] = _UNIFORMINITIALIZER
DESCRIPTOR.message_types_by_name['NormalInitializer'] = _NORMALINITIALIZER
DESCRIPTOR.message_types_by_name['GlorotNormalInitializer'] = _GLOROTNORMALINITIALIZER
DESCRIPTOR.message_types_by_name['GlorotUniformInitializer'] = _GLOROTUNIFORMINITIALIZER
DESCRIPTOR.message_types_by_name['HeNormalInitializer'] = _HENORMALINITIALIZER
DESCRIPTOR.message_types_by_name['HeUniformInitializer'] = _HEUNIFORMINITIALIZER
DESCRIPTOR.message_types_by_name['LeCunNormalInitializer'] = _LECUNNORMALINITIALIZER
DESCRIPTOR.message_types_by_name['LeCunUniformInitializer'] = _LECUNUNIFORMINITIALIZER
DESCRIPTOR.message_types_by_name['WeightsShape'] = _WEIGHTSSHAPE
DESCRIPTOR.message_types_by_name['WeightsData'] = _WEIGHTSDATA
DESCRIPTOR.message_types_by_name['MotifDefinitions'] = _MOTIFDEFINITIONS
DESCRIPTOR.message_types_by_name['Motif'] = _MOTIF
DESCRIPTOR.message_types_by_name['Layer'] = _LAYER
DESCRIPTOR.message_types_by_name['MotifLayer'] = _MOTIFLAYER
DESCRIPTOR.message_types_by_name['ELU'] = _ELU
DESCRIPTOR.message_types_by_name['Identity'] = _IDENTITY
DESCRIPTOR.message_types_by_name['LeakyRelu'] = _LEAKYRELU
DESCRIPTOR.message_types_by_name['Relu'] = _RELU
DESCRIPTOR.message_types_by_name['Sigmoid'] = _SIGMOID
DESCRIPTOR.message_types_by_name['SmoothRelu'] = _SMOOTHRELU
DESCRIPTOR.message_types_by_name['Softplus'] = _SOFTPLUS
DESCRIPTOR.message_types_by_name['Tanh'] = _TANH
DESCRIPTOR.message_types_by_name['Atan'] = _ATAN
DESCRIPTOR.message_types_by_name['BentIdentity'] = _BENTIDENTITY
DESCRIPTOR.message_types_by_name['Exponential'] = _EXPONENTIAL
DESCRIPTOR.message_types_by_name['Swish'] = _SWISH
DESCRIPTOR.message_types_by_name['Selu'] = _SELU
DESCRIPTOR.message_types_by_name['Softmax'] = _SOFTMAX
DESCRIPTOR.message_types_by_name['Power'] = _POWER
DESCRIPTOR.message_types_by_name['Abs'] = _ABS
DESCRIPTOR.message_types_by_name['L2Loss'] = _L2LOSS
DESCRIPTOR.message_types_by_name['Log'] = _LOG
DESCRIPTOR.message_types_by_name['Sigmoid_Binary_Cross_Entropy_With_Logits'] = _SIGMOID_BINARY_CROSS_ENTROPY_WITH_LOGITS
DESCRIPTOR.message_types_by_name['BatchNormalization'] = _BATCHNORMALIZATION
DESCRIPTOR.message_types_by_name['SeluDropout'] = _SELUDROPOUT
DESCRIPTOR.message_types_by_name['LocalResponseNormalization'] = _LOCALRESPONSENORMALIZATION
DESCRIPTOR.message_types_by_name['Dropout'] = _DROPOUT
DESCRIPTOR.message_types_by_name['Input'] = _INPUT
DESCRIPTOR.message_types_by_name['RepeatedInput'] = _REPEATEDINPUT
DESCRIPTOR.message_types_by_name['Reshape'] = _RESHAPE
DESCRIPTOR.message_types_by_name['Pooling'] = _POOLING
DESCRIPTOR.message_types_by_name['Unpooling'] = _UNPOOLING
DESCRIPTOR.message_types_by_name['Concatenation'] = _CONCATENATION
DESCRIPTOR.message_types_by_name['Slice'] = _SLICE
DESCRIPTOR.message_types_by_name['Split'] = _SPLIT
DESCRIPTOR.message_types_by_name['Sum'] = _SUM
DESCRIPTOR.message_types_by_name['Hadamard'] = _HADAMARD
DESCRIPTOR.message_types_by_name['Constant'] = _CONSTANT
DESCRIPTOR.message_types_by_name['Zero'] = _ZERO
DESCRIPTOR.message_types_by_name['Reduction'] = _REDUCTION
DESCRIPTOR.message_types_by_name['Evaluation'] = _EVALUATION
DESCRIPTOR.message_types_by_name['Gaussian'] = _GAUSSIAN
DESCRIPTOR.message_types_by_name['Bernoulli'] = _BERNOULLI
DESCRIPTOR.message_types_by_name['Uniform'] = _UNIFORM
DESCRIPTOR.message_types_by_name['Crop'] = _CROP
DESCRIPTOR.message_types_by_name['CategoricalRandom'] = _CATEGORICALRANDOM
DESCRIPTOR.message_types_by_name['DiscreteRandom'] = _DISCRETERANDOM
DESCRIPTOR.message_types_by_name['StopGradient'] = _STOPGRADIENT
DESCRIPTOR.message_types_by_name['Max'] = _MAX
DESCRIPTOR.message_types_by_name['Min'] = _MIN
DESCRIPTOR.message_types_by_name['FullyConnected'] = _FULLYCONNECTED
DESCRIPTOR.message_types_by_name['Convolution'] = _CONVOLUTION
DESCRIPTOR.message_types_by_name['Deconvolution'] = _DECONVOLUTION
DESCRIPTOR.message_types_by_name['Target'] = _TARGET
DESCRIPTOR.message_types_by_name['TargetReconstruction'] = _TARGETRECONSTRUCTION
DESCRIPTOR.enum_types_by_name['Imcomm'] = _IMCOMM

LbannPB = _reflection.GeneratedProtocolMessageType('LbannPB', (_message.Message,), dict(
  DESCRIPTOR = _LBANNPB,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LbannPB)
  ))
_sym_db.RegisterMessage(LbannPB)

DataReader = _reflection.GeneratedProtocolMessageType('DataReader', (_message.Message,), dict(
  DESCRIPTOR = _DATAREADER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.DataReader)
  ))
_sym_db.RegisterMessage(DataReader)

Reader = _reflection.GeneratedProtocolMessageType('Reader', (_message.Message,), dict(
  DESCRIPTOR = _READER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Reader)
  ))
_sym_db.RegisterMessage(Reader)

ImagePreprocessor = _reflection.GeneratedProtocolMessageType('ImagePreprocessor', (_message.Message,), dict(

  Cropper = _reflection.GeneratedProtocolMessageType('Cropper', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_CROPPER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Cropper)
    ))
  ,

  Augmenter = _reflection.GeneratedProtocolMessageType('Augmenter', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_AUGMENTER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Augmenter)
    ))
  ,

  Decolorizer = _reflection.GeneratedProtocolMessageType('Decolorizer', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_DECOLORIZER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Decolorizer)
    ))
  ,

  Colorizer = _reflection.GeneratedProtocolMessageType('Colorizer', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_COLORIZER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Colorizer)
    ))
  ,

  Normalizer = _reflection.GeneratedProtocolMessageType('Normalizer', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_NORMALIZER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Normalizer)
    ))
  ,

  Subtractor = _reflection.GeneratedProtocolMessageType('Subtractor', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_SUBTRACTOR,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Subtractor)
    ))
  ,

  PatchExtractor = _reflection.GeneratedProtocolMessageType('PatchExtractor', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_PATCHEXTRACTOR,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.PatchExtractor)
    ))
  ,

  Noiser = _reflection.GeneratedProtocolMessageType('Noiser', (_message.Message,), dict(
    DESCRIPTOR = _IMAGEPREPROCESSOR_NOISER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor.Noiser)
    ))
  ,
  DESCRIPTOR = _IMAGEPREPROCESSOR,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.ImagePreprocessor)
  ))
_sym_db.RegisterMessage(ImagePreprocessor)
_sym_db.RegisterMessage(ImagePreprocessor.Cropper)
_sym_db.RegisterMessage(ImagePreprocessor.Augmenter)
_sym_db.RegisterMessage(ImagePreprocessor.Decolorizer)
_sym_db.RegisterMessage(ImagePreprocessor.Colorizer)
_sym_db.RegisterMessage(ImagePreprocessor.Normalizer)
_sym_db.RegisterMessage(ImagePreprocessor.Subtractor)
_sym_db.RegisterMessage(ImagePreprocessor.PatchExtractor)
_sym_db.RegisterMessage(ImagePreprocessor.Noiser)

GenericPreprocessor = _reflection.GeneratedProtocolMessageType('GenericPreprocessor', (_message.Message,), dict(

  Normalizer = _reflection.GeneratedProtocolMessageType('Normalizer', (_message.Message,), dict(
    DESCRIPTOR = _GENERICPREPROCESSOR_NORMALIZER,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.GenericPreprocessor.Normalizer)
    ))
  ,
  DESCRIPTOR = _GENERICPREPROCESSOR,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.GenericPreprocessor)
  ))
_sym_db.RegisterMessage(GenericPreprocessor)
_sym_db.RegisterMessage(GenericPreprocessor.Normalizer)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), dict(

  Recurrent = _reflection.GeneratedProtocolMessageType('Recurrent', (_message.Message,), dict(
    DESCRIPTOR = _MODEL_RECURRENT,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.Model.Recurrent)
    ))
  ,

  Siamese = _reflection.GeneratedProtocolMessageType('Siamese', (_message.Message,), dict(
    DESCRIPTOR = _MODEL_SIAMESE,
    __module__ = 'lbann_pb2'
    # @@protoc_insertion_point(class_scope:lbann_data.Model.Siamese)
    ))
  ,
  DESCRIPTOR = _MODEL,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Model)
  ))
_sym_db.RegisterMessage(Model)
_sym_db.RegisterMessage(Model.Recurrent)
_sym_db.RegisterMessage(Model.Siamese)

ObjectiveFunction = _reflection.GeneratedProtocolMessageType('ObjectiveFunction', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTIVEFUNCTION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.ObjectiveFunction)
  ))
_sym_db.RegisterMessage(ObjectiveFunction)

MeanSquaredError = _reflection.GeneratedProtocolMessageType('MeanSquaredError', (_message.Message,), dict(
  DESCRIPTOR = _MEANSQUAREDERROR,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.MeanSquaredError)
  ))
_sym_db.RegisterMessage(MeanSquaredError)

MeanAbsoluteDeviation = _reflection.GeneratedProtocolMessageType('MeanAbsoluteDeviation', (_message.Message,), dict(
  DESCRIPTOR = _MEANABSOLUTEDEVIATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.MeanAbsoluteDeviation)
  ))
_sym_db.RegisterMessage(MeanAbsoluteDeviation)

MeanAbsoluteError = _reflection.GeneratedProtocolMessageType('MeanAbsoluteError', (_message.Message,), dict(
  DESCRIPTOR = _MEANABSOLUTEERROR,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.MeanAbsoluteError)
  ))
_sym_db.RegisterMessage(MeanAbsoluteError)

CrossEntropy = _reflection.GeneratedProtocolMessageType('CrossEntropy', (_message.Message,), dict(
  DESCRIPTOR = _CROSSENTROPY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CrossEntropy)
  ))
_sym_db.RegisterMessage(CrossEntropy)

BinaryCrossEntropy = _reflection.GeneratedProtocolMessageType('BinaryCrossEntropy', (_message.Message,), dict(
  DESCRIPTOR = _BINARYCROSSENTROPY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.BinaryCrossEntropy)
  ))
_sym_db.RegisterMessage(BinaryCrossEntropy)

CrossEntropyWithUncertainty = _reflection.GeneratedProtocolMessageType('CrossEntropyWithUncertainty', (_message.Message,), dict(
  DESCRIPTOR = _CROSSENTROPYWITHUNCERTAINTY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CrossEntropyWithUncertainty)
  ))
_sym_db.RegisterMessage(CrossEntropyWithUncertainty)

GeomNegLogLike = _reflection.GeneratedProtocolMessageType('GeomNegLogLike', (_message.Message,), dict(
  DESCRIPTOR = _GEOMNEGLOGLIKE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.GeomNegLogLike)
  ))
_sym_db.RegisterMessage(GeomNegLogLike)

PoissonNegLogLike = _reflection.GeneratedProtocolMessageType('PoissonNegLogLike', (_message.Message,), dict(
  DESCRIPTOR = _POISSONNEGLOGLIKE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.PoissonNegLogLike)
  ))
_sym_db.RegisterMessage(PoissonNegLogLike)

PolyaNegLogLike = _reflection.GeneratedProtocolMessageType('PolyaNegLogLike', (_message.Message,), dict(
  DESCRIPTOR = _POLYANEGLOGLIKE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.PolyaNegLogLike)
  ))
_sym_db.RegisterMessage(PolyaNegLogLike)

L1WeightRegularization = _reflection.GeneratedProtocolMessageType('L1WeightRegularization', (_message.Message,), dict(
  DESCRIPTOR = _L1WEIGHTREGULARIZATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.L1WeightRegularization)
  ))
_sym_db.RegisterMessage(L1WeightRegularization)

L2WeightRegularization = _reflection.GeneratedProtocolMessageType('L2WeightRegularization', (_message.Message,), dict(
  DESCRIPTOR = _L2WEIGHTREGULARIZATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.L2WeightRegularization)
  ))
_sym_db.RegisterMessage(L2WeightRegularization)

GroupLassoWeightRegularization = _reflection.GeneratedProtocolMessageType('GroupLassoWeightRegularization', (_message.Message,), dict(
  DESCRIPTOR = _GROUPLASSOWEIGHTREGULARIZATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.GroupLassoWeightRegularization)
  ))
_sym_db.RegisterMessage(GroupLassoWeightRegularization)

KLDivergence = _reflection.GeneratedProtocolMessageType('KLDivergence', (_message.Message,), dict(
  DESCRIPTOR = _KLDIVERGENCE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.KLDivergence)
  ))
_sym_db.RegisterMessage(KLDivergence)

LayerTerm = _reflection.GeneratedProtocolMessageType('LayerTerm', (_message.Message,), dict(
  DESCRIPTOR = _LAYERTERM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LayerTerm)
  ))
_sym_db.RegisterMessage(LayerTerm)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), dict(
  DESCRIPTOR = _METRIC,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Metric)
  ))
_sym_db.RegisterMessage(Metric)

CategoricalAccuracy = _reflection.GeneratedProtocolMessageType('CategoricalAccuracy', (_message.Message,), dict(
  DESCRIPTOR = _CATEGORICALACCURACY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CategoricalAccuracy)
  ))
_sym_db.RegisterMessage(CategoricalAccuracy)

TopKCategoricalAccuracy = _reflection.GeneratedProtocolMessageType('TopKCategoricalAccuracy', (_message.Message,), dict(
  DESCRIPTOR = _TOPKCATEGORICALACCURACY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.TopKCategoricalAccuracy)
  ))
_sym_db.RegisterMessage(TopKCategoricalAccuracy)

PearsonCorrelation = _reflection.GeneratedProtocolMessageType('PearsonCorrelation', (_message.Message,), dict(
  DESCRIPTOR = _PEARSONCORRELATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.PearsonCorrelation)
  ))
_sym_db.RegisterMessage(PearsonCorrelation)

R2 = _reflection.GeneratedProtocolMessageType('R2', (_message.Message,), dict(
  DESCRIPTOR = _R2,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.R2)
  ))
_sym_db.RegisterMessage(R2)

BooleanAccuracy = _reflection.GeneratedProtocolMessageType('BooleanAccuracy', (_message.Message,), dict(
  DESCRIPTOR = _BOOLEANACCURACY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.BooleanAccuracy)
  ))
_sym_db.RegisterMessage(BooleanAccuracy)

BooleanFalsePositives = _reflection.GeneratedProtocolMessageType('BooleanFalsePositives', (_message.Message,), dict(
  DESCRIPTOR = _BOOLEANFALSEPOSITIVES,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.BooleanFalsePositives)
  ))
_sym_db.RegisterMessage(BooleanFalsePositives)

BooleanFalseNegatives = _reflection.GeneratedProtocolMessageType('BooleanFalseNegatives', (_message.Message,), dict(
  DESCRIPTOR = _BOOLEANFALSENEGATIVES,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.BooleanFalseNegatives)
  ))
_sym_db.RegisterMessage(BooleanFalseNegatives)

LayerMetric = _reflection.GeneratedProtocolMessageType('LayerMetric', (_message.Message,), dict(
  DESCRIPTOR = _LAYERMETRIC,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LayerMetric)
  ))
_sym_db.RegisterMessage(LayerMetric)

Optimizer = _reflection.GeneratedProtocolMessageType('Optimizer', (_message.Message,), dict(
  DESCRIPTOR = _OPTIMIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Optimizer)
  ))
_sym_db.RegisterMessage(Optimizer)

Adagrad = _reflection.GeneratedProtocolMessageType('Adagrad', (_message.Message,), dict(
  DESCRIPTOR = _ADAGRAD,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Adagrad)
  ))
_sym_db.RegisterMessage(Adagrad)

Adam = _reflection.GeneratedProtocolMessageType('Adam', (_message.Message,), dict(
  DESCRIPTOR = _ADAM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Adam)
  ))
_sym_db.RegisterMessage(Adam)

HypergradientAdam = _reflection.GeneratedProtocolMessageType('HypergradientAdam', (_message.Message,), dict(
  DESCRIPTOR = _HYPERGRADIENTADAM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.HypergradientAdam)
  ))
_sym_db.RegisterMessage(HypergradientAdam)

Rmsprop = _reflection.GeneratedProtocolMessageType('Rmsprop', (_message.Message,), dict(
  DESCRIPTOR = _RMSPROP,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Rmsprop)
  ))
_sym_db.RegisterMessage(Rmsprop)

Sgd = _reflection.GeneratedProtocolMessageType('Sgd', (_message.Message,), dict(
  DESCRIPTOR = _SGD,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Sgd)
  ))
_sym_db.RegisterMessage(Sgd)

Callback = _reflection.GeneratedProtocolMessageType('Callback', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACK,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Callback)
  ))
_sym_db.RegisterMessage(Callback)

CallbackLTFB = _reflection.GeneratedProtocolMessageType('CallbackLTFB', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKLTFB,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackLTFB)
  ))
_sym_db.RegisterMessage(CallbackLTFB)

CallbackStepLearningRate = _reflection.GeneratedProtocolMessageType('CallbackStepLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKSTEPLEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackStepLearningRate)
  ))
_sym_db.RegisterMessage(CallbackStepLearningRate)

CallbackCustomLearningRate = _reflection.GeneratedProtocolMessageType('CallbackCustomLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKCUSTOMLEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackCustomLearningRate)
  ))
_sym_db.RegisterMessage(CallbackCustomLearningRate)

CallbackAdaptiveLearningRate = _reflection.GeneratedProtocolMessageType('CallbackAdaptiveLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKADAPTIVELEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackAdaptiveLearningRate)
  ))
_sym_db.RegisterMessage(CallbackAdaptiveLearningRate)

CallbackSaveImages = _reflection.GeneratedProtocolMessageType('CallbackSaveImages', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKSAVEIMAGES,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackSaveImages)
  ))
_sym_db.RegisterMessage(CallbackSaveImages)

CallbackPrint = _reflection.GeneratedProtocolMessageType('CallbackPrint', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKPRINT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackPrint)
  ))
_sym_db.RegisterMessage(CallbackPrint)

CallbackProfiler = _reflection.GeneratedProtocolMessageType('CallbackProfiler', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKPROFILER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackProfiler)
  ))
_sym_db.RegisterMessage(CallbackProfiler)

CallbackTimer = _reflection.GeneratedProtocolMessageType('CallbackTimer', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKTIMER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackTimer)
  ))
_sym_db.RegisterMessage(CallbackTimer)

CallbackSummary = _reflection.GeneratedProtocolMessageType('CallbackSummary', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKSUMMARY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackSummary)
  ))
_sym_db.RegisterMessage(CallbackSummary)

CallbackDumpWeights = _reflection.GeneratedProtocolMessageType('CallbackDumpWeights', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDUMPWEIGHTS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDumpWeights)
  ))
_sym_db.RegisterMessage(CallbackDumpWeights)

CallbackDumpActivations = _reflection.GeneratedProtocolMessageType('CallbackDumpActivations', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDUMPACTIVATIONS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDumpActivations)
  ))
_sym_db.RegisterMessage(CallbackDumpActivations)

CallbackDumpGradients = _reflection.GeneratedProtocolMessageType('CallbackDumpGradients', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDUMPGRADIENTS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDumpGradients)
  ))
_sym_db.RegisterMessage(CallbackDumpGradients)

CallbackDumpMBIndices = _reflection.GeneratedProtocolMessageType('CallbackDumpMBIndices', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDUMPMBINDICES,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDumpMBIndices)
  ))
_sym_db.RegisterMessage(CallbackDumpMBIndices)

CallbackDispIOStats = _reflection.GeneratedProtocolMessageType('CallbackDispIOStats', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDISPIOSTATS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDispIOStats)
  ))
_sym_db.RegisterMessage(CallbackDispIOStats)

CallbackImComm = _reflection.GeneratedProtocolMessageType('CallbackImComm', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKIMCOMM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackImComm)
  ))
_sym_db.RegisterMessage(CallbackImComm)

CallbackDebug = _reflection.GeneratedProtocolMessageType('CallbackDebug', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDEBUG,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDebug)
  ))
_sym_db.RegisterMessage(CallbackDebug)

CallbackDebugIO = _reflection.GeneratedProtocolMessageType('CallbackDebugIO', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDEBUGIO,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDebugIO)
  ))
_sym_db.RegisterMessage(CallbackDebugIO)

CallbackCheckSmall = _reflection.GeneratedProtocolMessageType('CallbackCheckSmall', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKCHECKSMALL,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackCheckSmall)
  ))
_sym_db.RegisterMessage(CallbackCheckSmall)

CallbackCheckNaN = _reflection.GeneratedProtocolMessageType('CallbackCheckNaN', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKCHECKNAN,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackCheckNaN)
  ))
_sym_db.RegisterMessage(CallbackCheckNaN)

CallbackCheckDataset = _reflection.GeneratedProtocolMessageType('CallbackCheckDataset', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKCHECKDATASET,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackCheckDataset)
  ))
_sym_db.RegisterMessage(CallbackCheckDataset)

CallbackHang = _reflection.GeneratedProtocolMessageType('CallbackHang', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKHANG,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackHang)
  ))
_sym_db.RegisterMessage(CallbackHang)

CallbackDropFixedLearningRate = _reflection.GeneratedProtocolMessageType('CallbackDropFixedLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKDROPFIXEDLEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackDropFixedLearningRate)
  ))
_sym_db.RegisterMessage(CallbackDropFixedLearningRate)

CallbackLinearGrowthLearningRate = _reflection.GeneratedProtocolMessageType('CallbackLinearGrowthLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKLINEARGROWTHLEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackLinearGrowthLearningRate)
  ))
_sym_db.RegisterMessage(CallbackLinearGrowthLearningRate)

CallbackPolyLearningRate = _reflection.GeneratedProtocolMessageType('CallbackPolyLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKPOLYLEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackPolyLearningRate)
  ))
_sym_db.RegisterMessage(CallbackPolyLearningRate)

CallbackStepMinibatch = _reflection.GeneratedProtocolMessageType('CallbackStepMinibatch', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKSTEPMINIBATCH,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackStepMinibatch)
  ))
_sym_db.RegisterMessage(CallbackStepMinibatch)

MinibatchScheduleStep = _reflection.GeneratedProtocolMessageType('MinibatchScheduleStep', (_message.Message,), dict(
  DESCRIPTOR = _MINIBATCHSCHEDULESTEP,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.MinibatchScheduleStep)
  ))
_sym_db.RegisterMessage(MinibatchScheduleStep)

CallbackOptimizerwiseAdaptiveLearningRate = _reflection.GeneratedProtocolMessageType('CallbackOptimizerwiseAdaptiveLearningRate', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKOPTIMIZERWISEADAPTIVELEARNINGRATE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackOptimizerwiseAdaptiveLearningRate)
  ))
_sym_db.RegisterMessage(CallbackOptimizerwiseAdaptiveLearningRate)

CallbackMinibatchSchedule = _reflection.GeneratedProtocolMessageType('CallbackMinibatchSchedule', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKMINIBATCHSCHEDULE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackMinibatchSchedule)
  ))
_sym_db.RegisterMessage(CallbackMinibatchSchedule)

CallbackGradientCheck = _reflection.GeneratedProtocolMessageType('CallbackGradientCheck', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKGRADIENTCHECK,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackGradientCheck)
  ))
_sym_db.RegisterMessage(CallbackGradientCheck)

CallbackCheckpoint = _reflection.GeneratedProtocolMessageType('CallbackCheckpoint', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKCHECKPOINT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackCheckpoint)
  ))
_sym_db.RegisterMessage(CallbackCheckpoint)

CallbackSaveModel = _reflection.GeneratedProtocolMessageType('CallbackSaveModel', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKSAVEMODEL,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackSaveModel)
  ))
_sym_db.RegisterMessage(CallbackSaveModel)

CallbackReplaceWeights = _reflection.GeneratedProtocolMessageType('CallbackReplaceWeights', (_message.Message,), dict(
  DESCRIPTOR = _CALLBACKREPLACEWEIGHTS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CallbackReplaceWeights)
  ))
_sym_db.RegisterMessage(CallbackReplaceWeights)

Weights = _reflection.GeneratedProtocolMessageType('Weights', (_message.Message,), dict(
  DESCRIPTOR = _WEIGHTS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Weights)
  ))
_sym_db.RegisterMessage(Weights)

ConstantInitializer = _reflection.GeneratedProtocolMessageType('ConstantInitializer', (_message.Message,), dict(
  DESCRIPTOR = _CONSTANTINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.ConstantInitializer)
  ))
_sym_db.RegisterMessage(ConstantInitializer)

UniformInitializer = _reflection.GeneratedProtocolMessageType('UniformInitializer', (_message.Message,), dict(
  DESCRIPTOR = _UNIFORMINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.UniformInitializer)
  ))
_sym_db.RegisterMessage(UniformInitializer)

NormalInitializer = _reflection.GeneratedProtocolMessageType('NormalInitializer', (_message.Message,), dict(
  DESCRIPTOR = _NORMALINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.NormalInitializer)
  ))
_sym_db.RegisterMessage(NormalInitializer)

GlorotNormalInitializer = _reflection.GeneratedProtocolMessageType('GlorotNormalInitializer', (_message.Message,), dict(
  DESCRIPTOR = _GLOROTNORMALINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.GlorotNormalInitializer)
  ))
_sym_db.RegisterMessage(GlorotNormalInitializer)

GlorotUniformInitializer = _reflection.GeneratedProtocolMessageType('GlorotUniformInitializer', (_message.Message,), dict(
  DESCRIPTOR = _GLOROTUNIFORMINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.GlorotUniformInitializer)
  ))
_sym_db.RegisterMessage(GlorotUniformInitializer)

HeNormalInitializer = _reflection.GeneratedProtocolMessageType('HeNormalInitializer', (_message.Message,), dict(
  DESCRIPTOR = _HENORMALINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.HeNormalInitializer)
  ))
_sym_db.RegisterMessage(HeNormalInitializer)

HeUniformInitializer = _reflection.GeneratedProtocolMessageType('HeUniformInitializer', (_message.Message,), dict(
  DESCRIPTOR = _HEUNIFORMINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.HeUniformInitializer)
  ))
_sym_db.RegisterMessage(HeUniformInitializer)

LeCunNormalInitializer = _reflection.GeneratedProtocolMessageType('LeCunNormalInitializer', (_message.Message,), dict(
  DESCRIPTOR = _LECUNNORMALINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LeCunNormalInitializer)
  ))
_sym_db.RegisterMessage(LeCunNormalInitializer)

LeCunUniformInitializer = _reflection.GeneratedProtocolMessageType('LeCunUniformInitializer', (_message.Message,), dict(
  DESCRIPTOR = _LECUNUNIFORMINITIALIZER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LeCunUniformInitializer)
  ))
_sym_db.RegisterMessage(LeCunUniformInitializer)

WeightsShape = _reflection.GeneratedProtocolMessageType('WeightsShape', (_message.Message,), dict(
  DESCRIPTOR = _WEIGHTSSHAPE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.WeightsShape)
  ))
_sym_db.RegisterMessage(WeightsShape)

WeightsData = _reflection.GeneratedProtocolMessageType('WeightsData', (_message.Message,), dict(
  DESCRIPTOR = _WEIGHTSDATA,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.WeightsData)
  ))
_sym_db.RegisterMessage(WeightsData)

MotifDefinitions = _reflection.GeneratedProtocolMessageType('MotifDefinitions', (_message.Message,), dict(
  DESCRIPTOR = _MOTIFDEFINITIONS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.MotifDefinitions)
  ))
_sym_db.RegisterMessage(MotifDefinitions)

Motif = _reflection.GeneratedProtocolMessageType('Motif', (_message.Message,), dict(
  DESCRIPTOR = _MOTIF,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Motif)
  ))
_sym_db.RegisterMessage(Motif)

Layer = _reflection.GeneratedProtocolMessageType('Layer', (_message.Message,), dict(
  DESCRIPTOR = _LAYER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Layer)
  ))
_sym_db.RegisterMessage(Layer)

MotifLayer = _reflection.GeneratedProtocolMessageType('MotifLayer', (_message.Message,), dict(
  DESCRIPTOR = _MOTIFLAYER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.MotifLayer)
  ))
_sym_db.RegisterMessage(MotifLayer)

ELU = _reflection.GeneratedProtocolMessageType('ELU', (_message.Message,), dict(
  DESCRIPTOR = _ELU,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.ELU)
  ))
_sym_db.RegisterMessage(ELU)

Identity = _reflection.GeneratedProtocolMessageType('Identity', (_message.Message,), dict(
  DESCRIPTOR = _IDENTITY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Identity)
  ))
_sym_db.RegisterMessage(Identity)

LeakyRelu = _reflection.GeneratedProtocolMessageType('LeakyRelu', (_message.Message,), dict(
  DESCRIPTOR = _LEAKYRELU,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LeakyRelu)
  ))
_sym_db.RegisterMessage(LeakyRelu)

Relu = _reflection.GeneratedProtocolMessageType('Relu', (_message.Message,), dict(
  DESCRIPTOR = _RELU,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Relu)
  ))
_sym_db.RegisterMessage(Relu)

Sigmoid = _reflection.GeneratedProtocolMessageType('Sigmoid', (_message.Message,), dict(
  DESCRIPTOR = _SIGMOID,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Sigmoid)
  ))
_sym_db.RegisterMessage(Sigmoid)

SmoothRelu = _reflection.GeneratedProtocolMessageType('SmoothRelu', (_message.Message,), dict(
  DESCRIPTOR = _SMOOTHRELU,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.SmoothRelu)
  ))
_sym_db.RegisterMessage(SmoothRelu)

Softplus = _reflection.GeneratedProtocolMessageType('Softplus', (_message.Message,), dict(
  DESCRIPTOR = _SOFTPLUS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Softplus)
  ))
_sym_db.RegisterMessage(Softplus)

Tanh = _reflection.GeneratedProtocolMessageType('Tanh', (_message.Message,), dict(
  DESCRIPTOR = _TANH,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Tanh)
  ))
_sym_db.RegisterMessage(Tanh)

Atan = _reflection.GeneratedProtocolMessageType('Atan', (_message.Message,), dict(
  DESCRIPTOR = _ATAN,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Atan)
  ))
_sym_db.RegisterMessage(Atan)

BentIdentity = _reflection.GeneratedProtocolMessageType('BentIdentity', (_message.Message,), dict(
  DESCRIPTOR = _BENTIDENTITY,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.BentIdentity)
  ))
_sym_db.RegisterMessage(BentIdentity)

Exponential = _reflection.GeneratedProtocolMessageType('Exponential', (_message.Message,), dict(
  DESCRIPTOR = _EXPONENTIAL,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Exponential)
  ))
_sym_db.RegisterMessage(Exponential)

Swish = _reflection.GeneratedProtocolMessageType('Swish', (_message.Message,), dict(
  DESCRIPTOR = _SWISH,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Swish)
  ))
_sym_db.RegisterMessage(Swish)

Selu = _reflection.GeneratedProtocolMessageType('Selu', (_message.Message,), dict(
  DESCRIPTOR = _SELU,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Selu)
  ))
_sym_db.RegisterMessage(Selu)

Softmax = _reflection.GeneratedProtocolMessageType('Softmax', (_message.Message,), dict(
  DESCRIPTOR = _SOFTMAX,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Softmax)
  ))
_sym_db.RegisterMessage(Softmax)

Power = _reflection.GeneratedProtocolMessageType('Power', (_message.Message,), dict(
  DESCRIPTOR = _POWER,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Power)
  ))
_sym_db.RegisterMessage(Power)

Abs = _reflection.GeneratedProtocolMessageType('Abs', (_message.Message,), dict(
  DESCRIPTOR = _ABS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Abs)
  ))
_sym_db.RegisterMessage(Abs)

L2Loss = _reflection.GeneratedProtocolMessageType('L2Loss', (_message.Message,), dict(
  DESCRIPTOR = _L2LOSS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.L2Loss)
  ))
_sym_db.RegisterMessage(L2Loss)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), dict(
  DESCRIPTOR = _LOG,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Log)
  ))
_sym_db.RegisterMessage(Log)

Sigmoid_Binary_Cross_Entropy_With_Logits = _reflection.GeneratedProtocolMessageType('Sigmoid_Binary_Cross_Entropy_With_Logits', (_message.Message,), dict(
  DESCRIPTOR = _SIGMOID_BINARY_CROSS_ENTROPY_WITH_LOGITS,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Sigmoid_Binary_Cross_Entropy_With_Logits)
  ))
_sym_db.RegisterMessage(Sigmoid_Binary_Cross_Entropy_With_Logits)

BatchNormalization = _reflection.GeneratedProtocolMessageType('BatchNormalization', (_message.Message,), dict(
  DESCRIPTOR = _BATCHNORMALIZATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.BatchNormalization)
  ))
_sym_db.RegisterMessage(BatchNormalization)

SeluDropout = _reflection.GeneratedProtocolMessageType('SeluDropout', (_message.Message,), dict(
  DESCRIPTOR = _SELUDROPOUT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.SeluDropout)
  ))
_sym_db.RegisterMessage(SeluDropout)

LocalResponseNormalization = _reflection.GeneratedProtocolMessageType('LocalResponseNormalization', (_message.Message,), dict(
  DESCRIPTOR = _LOCALRESPONSENORMALIZATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.LocalResponseNormalization)
  ))
_sym_db.RegisterMessage(LocalResponseNormalization)

Dropout = _reflection.GeneratedProtocolMessageType('Dropout', (_message.Message,), dict(
  DESCRIPTOR = _DROPOUT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Dropout)
  ))
_sym_db.RegisterMessage(Dropout)

Input = _reflection.GeneratedProtocolMessageType('Input', (_message.Message,), dict(
  DESCRIPTOR = _INPUT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Input)
  ))
_sym_db.RegisterMessage(Input)

RepeatedInput = _reflection.GeneratedProtocolMessageType('RepeatedInput', (_message.Message,), dict(
  DESCRIPTOR = _REPEATEDINPUT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.RepeatedInput)
  ))
_sym_db.RegisterMessage(RepeatedInput)

Reshape = _reflection.GeneratedProtocolMessageType('Reshape', (_message.Message,), dict(
  DESCRIPTOR = _RESHAPE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Reshape)
  ))
_sym_db.RegisterMessage(Reshape)

Pooling = _reflection.GeneratedProtocolMessageType('Pooling', (_message.Message,), dict(
  DESCRIPTOR = _POOLING,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Pooling)
  ))
_sym_db.RegisterMessage(Pooling)

Unpooling = _reflection.GeneratedProtocolMessageType('Unpooling', (_message.Message,), dict(
  DESCRIPTOR = _UNPOOLING,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Unpooling)
  ))
_sym_db.RegisterMessage(Unpooling)

Concatenation = _reflection.GeneratedProtocolMessageType('Concatenation', (_message.Message,), dict(
  DESCRIPTOR = _CONCATENATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Concatenation)
  ))
_sym_db.RegisterMessage(Concatenation)

Slice = _reflection.GeneratedProtocolMessageType('Slice', (_message.Message,), dict(
  DESCRIPTOR = _SLICE,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Slice)
  ))
_sym_db.RegisterMessage(Slice)

Split = _reflection.GeneratedProtocolMessageType('Split', (_message.Message,), dict(
  DESCRIPTOR = _SPLIT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Split)
  ))
_sym_db.RegisterMessage(Split)

Sum = _reflection.GeneratedProtocolMessageType('Sum', (_message.Message,), dict(
  DESCRIPTOR = _SUM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Sum)
  ))
_sym_db.RegisterMessage(Sum)

Hadamard = _reflection.GeneratedProtocolMessageType('Hadamard', (_message.Message,), dict(
  DESCRIPTOR = _HADAMARD,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Hadamard)
  ))
_sym_db.RegisterMessage(Hadamard)

Constant = _reflection.GeneratedProtocolMessageType('Constant', (_message.Message,), dict(
  DESCRIPTOR = _CONSTANT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Constant)
  ))
_sym_db.RegisterMessage(Constant)

Zero = _reflection.GeneratedProtocolMessageType('Zero', (_message.Message,), dict(
  DESCRIPTOR = _ZERO,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Zero)
  ))
_sym_db.RegisterMessage(Zero)

Reduction = _reflection.GeneratedProtocolMessageType('Reduction', (_message.Message,), dict(
  DESCRIPTOR = _REDUCTION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Reduction)
  ))
_sym_db.RegisterMessage(Reduction)

Evaluation = _reflection.GeneratedProtocolMessageType('Evaluation', (_message.Message,), dict(
  DESCRIPTOR = _EVALUATION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Evaluation)
  ))
_sym_db.RegisterMessage(Evaluation)

Gaussian = _reflection.GeneratedProtocolMessageType('Gaussian', (_message.Message,), dict(
  DESCRIPTOR = _GAUSSIAN,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Gaussian)
  ))
_sym_db.RegisterMessage(Gaussian)

Bernoulli = _reflection.GeneratedProtocolMessageType('Bernoulli', (_message.Message,), dict(
  DESCRIPTOR = _BERNOULLI,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Bernoulli)
  ))
_sym_db.RegisterMessage(Bernoulli)

Uniform = _reflection.GeneratedProtocolMessageType('Uniform', (_message.Message,), dict(
  DESCRIPTOR = _UNIFORM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Uniform)
  ))
_sym_db.RegisterMessage(Uniform)

Crop = _reflection.GeneratedProtocolMessageType('Crop', (_message.Message,), dict(
  DESCRIPTOR = _CROP,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Crop)
  ))
_sym_db.RegisterMessage(Crop)

CategoricalRandom = _reflection.GeneratedProtocolMessageType('CategoricalRandom', (_message.Message,), dict(
  DESCRIPTOR = _CATEGORICALRANDOM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.CategoricalRandom)
  ))
_sym_db.RegisterMessage(CategoricalRandom)

DiscreteRandom = _reflection.GeneratedProtocolMessageType('DiscreteRandom', (_message.Message,), dict(
  DESCRIPTOR = _DISCRETERANDOM,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.DiscreteRandom)
  ))
_sym_db.RegisterMessage(DiscreteRandom)

StopGradient = _reflection.GeneratedProtocolMessageType('StopGradient', (_message.Message,), dict(
  DESCRIPTOR = _STOPGRADIENT,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.StopGradient)
  ))
_sym_db.RegisterMessage(StopGradient)

Max = _reflection.GeneratedProtocolMessageType('Max', (_message.Message,), dict(
  DESCRIPTOR = _MAX,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Max)
  ))
_sym_db.RegisterMessage(Max)

Min = _reflection.GeneratedProtocolMessageType('Min', (_message.Message,), dict(
  DESCRIPTOR = _MIN,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Min)
  ))
_sym_db.RegisterMessage(Min)

FullyConnected = _reflection.GeneratedProtocolMessageType('FullyConnected', (_message.Message,), dict(
  DESCRIPTOR = _FULLYCONNECTED,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.FullyConnected)
  ))
_sym_db.RegisterMessage(FullyConnected)

Convolution = _reflection.GeneratedProtocolMessageType('Convolution', (_message.Message,), dict(
  DESCRIPTOR = _CONVOLUTION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Convolution)
  ))
_sym_db.RegisterMessage(Convolution)

Deconvolution = _reflection.GeneratedProtocolMessageType('Deconvolution', (_message.Message,), dict(
  DESCRIPTOR = _DECONVOLUTION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Deconvolution)
  ))
_sym_db.RegisterMessage(Deconvolution)

Target = _reflection.GeneratedProtocolMessageType('Target', (_message.Message,), dict(
  DESCRIPTOR = _TARGET,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.Target)
  ))
_sym_db.RegisterMessage(Target)

TargetReconstruction = _reflection.GeneratedProtocolMessageType('TargetReconstruction', (_message.Message,), dict(
  DESCRIPTOR = _TARGETRECONSTRUCTION,
  __module__ = 'lbann_pb2'
  # @@protoc_insertion_point(class_scope:lbann_data.TargetReconstruction)
  ))
_sym_db.RegisterMessage(TargetReconstruction)


_IMAGEPREPROCESSOR_SUBTRACTOR.fields_by_name['channel_mean'].has_options = True
_IMAGEPREPROCESSOR_SUBTRACTOR.fields_by_name['channel_mean']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_IMAGEPREPROCESSOR_SUBTRACTOR.fields_by_name['channel_stddev'].has_options = True
_IMAGEPREPROCESSOR_SUBTRACTOR.fields_by_name['channel_stddev']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_WEIGHTSSHAPE.fields_by_name['dim'].has_options = True
_WEIGHTSSHAPE.fields_by_name['dim']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
_WEIGHTSDATA.fields_by_name['data'].has_options = True
_WEIGHTSDATA.fields_by_name['data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\020\001'))
# @@protoc_insertion_point(module_scope)

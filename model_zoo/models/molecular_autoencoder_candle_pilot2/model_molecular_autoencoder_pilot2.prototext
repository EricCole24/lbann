model {
  mini_batch_size: 512
  block_size: 256
  num_epochs: 4
  num_parallel_readers: 1
  procs_per_model: 0

  ###################################################
  # Objective function
  ###################################################

  objective_function {
    layer_term { layer: "mean_squared_error" }
    l2_weight_regularization {
      scale_factor: 0.0005
    }
  }

  ###################################################
  # Callbacks
  ###################################################

  callback { print {} }
  callback { timer {} }

  ###################################################
  # start of layers
  ###################################################

  #######
  # INPUT
  #######
  layer {
    name: "input"
    children: "data label"
    data_layout: "data_parallel"
    input {
      io_buffer: "partitioned"
      target_mode: "reconstruction"
    }
  }
  layer {
    parents: "input"
    name: "data"
    data_layout: "data_parallel"
    split {}
  }
  layer {
    parents: "input"
    name: "label"
    data_layout: "data_parallel"
    split {}
  }

  #############
  # FULLY CONNECTED ENCODE 1
  #############
  layer {
    parents: "data"
    name: "encode1"
    data_layout: "data_parallel"
    fully_connected {
      num_neurons: 12
      has_bias: true
    }
  }

  ######
  # RELU encode1
  ######
  layer {
    parents: "encode1"
    name: "encode_relu1"
    data_layout: "data_parallel"
    relu {
    }
  }

  #################
  # FULLY_CONNECTED decode1
  #################
  weights {
    name: "decode1_matrix"
    glorot_uniform_initializer {}
  }
  layer {
    parents: "encode_relu1"
    name: "decode1"
    weights: "decode1_matrix"
    hint_layer: "data"
    data_layout: "data_parallel"
    fully_connected {
      has_bias: true
    }
  }

  #######
  # RELU decode1
  #######
  layer {
    parents: "decode1"
    name: "decode_relu10"
    data_layout: "data_parallel"
    relu {
    }
  }

  #################
  # RECONSTRUCTION
  #################
  layer {
    parents: "decode_relu10"
    name: "reconstruction"
    data_layout: "data_parallel"
    split {}
  }
  layer {
    parents: "reconstruction data"
    name: "mean_squared_error"
    data_layout: "data_parallel"
    mean_squared_error {}
  }

  ###################################################
  # end of layers
  ###################################################
}
